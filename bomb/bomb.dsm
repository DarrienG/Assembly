;; 
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2015 Retargetable Decompiler <info@retdec.com>
;; 
;; Total functions in disassembled code: 36
;; Decompiler release: v2.1.1.1 (2015-11-18)
;; Decompilation date: 2015-11-25 18:00:55
;; Architecture: x86 (or later and compatible)
;; 


;; 
;; Code Segment
;; 

;  section: .init
;  function: _init at 0x80486f8 -- 0x8048703
0x80486f8:   55                       	push ebp
0x80486f9:   89 e5                    	mov ebp, esp
0x80486fb:   53                       	push ebx
0x80486fc:   83 ec 04                 	sub esp, 0x4
0x80486ff:   e8 00 00 00 00           	call 0x8048704  <function_8048704>
;  function: function_8048704 at 0x8048704 -- 0x8048937
0x8048704:   5b                       	pop ebx
0x8048705:   81 c3 dc 19 00 00        	add ebx, 0x19dc
0x804870b:   8b 93 fc ff ff ff        	mov edx, dword [ ebx + 0xfffffffffffffffc ]
0x8048711:   85 d2                    	test edx, edx
0x8048713:   74 05                    	jz  0x804871a  <function_8048704+0x16>
0x8048715:   e8 4e 00 00 00           	call 0x8048768  <__gmon_start>
0x804871a:   e8 b1 02 00 00           	call 0x80489d0  <frame_dummy>
0x804871f:   e8 3c 0f 00 00           	call 0x8049660  <__do_global_ctors_aux>
0x8048724:   58                       	pop eax
0x8048725:   5b                       	pop ebx
0x8048726:   c9                       	leave
0x8048727:   c3                       	ret
0x8048728:   ff 35 e4 a0 04 08        	push dword [ 0x804a0e4 ]
0x804872e:   ff 25 e8 a0 04 08        	jmp dword [ 0x804a0e8 ]
0x8048734:   00 00                    	add byte [ eax ], al
0x8048736:   00 00                    	add byte [ eax ], al
0x8048738:   ff 25 ec a0 04 08        	jmp dword [ 0x804a0ec ]
0x804873e:   68 00 00 00 00           	push 0x0
0x8048743:   e9 e0 ff ff ff           	jmp 0xffffffffffffffe0
0x8048748:   ff 25 f0 a0 04 08        	jmp dword [ 0x804a0f0 ]
0x804874e:   68 08 00 00 00           	push 0x8
0x8048753:   e9 d0 ff ff ff           	jmp 0xffffffffffffffd0
0x8048758:   ff 25 f4 a0 04 08        	jmp dword [ 0x804a0f4 ]
0x804875e:   68 10 00 00 00           	push 0x10
0x8048763:   e9 c0 ff ff ff           	jmp 0xffffffffffffffc0
0x8048768:   ff 25 f8 a0 04 08        	jmp dword [ 0x804a0f8 ]
0x804876e:   68 18 00 00 00           	push 0x18
0x8048773:   e9 b0 ff ff ff           	jmp 0xffffffffffffffb0
0x8048778:   ff 25 fc a0 04 08        	jmp dword [ 0x804a0fc ]
0x804877e:   68 20 00 00 00           	push 0x20
0x8048783:   e9 a0 ff ff ff           	jmp 0xffffffffffffffa0
0x8048788:   ff 25 00 a1 04 08        	jmp dword [ 0x804a100 ]
0x804878e:   68 28 00 00 00           	push 0x28
0x8048793:   e9 90 ff ff ff           	jmp 0xffffffffffffff90
0x8048798:   ff 25 04 a1 04 08        	jmp dword [ 0x804a104 ]
0x804879e:   68 30 00 00 00           	push 0x30
0x80487a3:   e9 80 ff ff ff           	jmp 0xffffffffffffff80
0x80487a8:   ff 25 08 a1 04 08        	jmp dword [ 0x804a108 ]
0x80487ae:   68 38 00 00 00           	push 0x38
0x80487b3:   e9 70 ff ff ff           	jmp 0xffffffffffffff70
0x80487b8:   ff 25 0c a1 04 08        	jmp dword [ 0x804a10c ]
0x80487be:   68 40 00 00 00           	push 0x40
0x80487c3:   e9 60 ff ff ff           	jmp 0xffffffffffffff60
0x80487c8:   ff 25 10 a1 04 08        	jmp dword [ 0x804a110 ]
0x80487ce:   68 48 00 00 00           	push 0x48
0x80487d3:   e9 50 ff ff ff           	jmp 0xffffffffffffff50
0x80487d8:   ff 25 14 a1 04 08        	jmp dword [ 0x804a114 ]
0x80487de:   68 50 00 00 00           	push 0x50
0x80487e3:   e9 40 ff ff ff           	jmp 0xffffffffffffff40
0x80487e8:   ff 25 18 a1 04 08        	jmp dword [ 0x804a118 ]
0x80487ee:   68 58 00 00 00           	push 0x58
0x80487f3:   e9 30 ff ff ff           	jmp 0xffffffffffffff30
0x80487f8:   ff 25 1c a1 04 08        	jmp dword [ 0x804a11c ]
0x80487fe:   68 60 00 00 00           	push 0x60
0x8048803:   e9 20 ff ff ff           	jmp 0xffffffffffffff20
0x8048808:   ff 25 20 a1 04 08        	jmp dword [ 0x804a120 ]
0x804880e:   68 68 00 00 00           	push 0x68
0x8048813:   e9 10 ff ff ff           	jmp 0xffffffffffffff10
0x8048818:   ff 25 24 a1 04 08        	jmp dword [ 0x804a124 ]
0x804881e:   68 70 00 00 00           	push 0x70
0x8048823:   e9 00 ff ff ff           	jmp 0xffffffffffffff00
0x8048828:   ff 25 28 a1 04 08        	jmp dword [ 0x804a128 ]
0x804882e:   68 78 00 00 00           	push 0x78
0x8048833:   e9 f0 fe ff ff           	jmp 0xfffffffffffffef0
0x8048838:   ff 25 2c a1 04 08        	jmp dword [ 0x804a12c ]
0x804883e:   68 80 00 00 00           	push 0x80
0x8048843:   e9 e0 fe ff ff           	jmp 0xfffffffffffffee0
0x8048848:   ff 25 30 a1 04 08        	jmp dword [ 0x804a130 ]
0x804884e:   68 88 00 00 00           	push 0x88
0x8048853:   e9 d0 fe ff ff           	jmp 0xfffffffffffffed0
0x8048858:   ff 25 34 a1 04 08        	jmp dword [ 0x804a134 ]
0x804885e:   68 90 00 00 00           	push 0x90
0x8048863:   e9 c0 fe ff ff           	jmp 0xfffffffffffffec0
0x8048868:   ff 25 38 a1 04 08        	jmp dword [ 0x804a138 ]
0x804886e:   68 98 00 00 00           	push 0x98
0x8048873:   e9 b0 fe ff ff           	jmp 0xfffffffffffffeb0
0x8048878:   ff 25 3c a1 04 08        	jmp dword [ 0x804a13c ]
0x804887e:   68 a0 00 00 00           	push 0xa0
0x8048883:   e9 a0 fe ff ff           	jmp 0xfffffffffffffea0
0x8048888:   ff 25 40 a1 04 08        	jmp dword [ 0x804a140 ]
0x804888e:   68 a8 00 00 00           	push 0xa8
0x8048893:   e9 90 fe ff ff           	jmp 0xfffffffffffffe90
0x8048898:   ff 25 44 a1 04 08        	jmp dword [ 0x804a144 ]
0x804889e:   68 b0 00 00 00           	push 0xb0
0x80488a3:   e9 80 fe ff ff           	jmp 0xfffffffffffffe80
0x80488a8:   ff 25 48 a1 04 08        	jmp dword [ 0x804a148 ]
0x80488ae:   68 b8 00 00 00           	push 0xb8
0x80488b3:   e9 70 fe ff ff           	jmp 0xfffffffffffffe70
0x80488b8:   ff 25 4c a1 04 08        	jmp dword [ 0x804a14c ]
0x80488be:   68 c0 00 00 00           	push 0xc0
0x80488c3:   e9 60 fe ff ff           	jmp 0xfffffffffffffe60
0x80488c8:   ff 25 50 a1 04 08        	jmp dword [ 0x804a150 ]
0x80488ce:   68 c8 00 00 00           	push 0xc8
0x80488d3:   e9 50 fe ff ff           	jmp 0xfffffffffffffe50
0x80488d8:   ff 25 54 a1 04 08        	jmp dword [ 0x804a154 ]
0x80488de:   68 d0 00 00 00           	push 0xd0
0x80488e3:   e9 40 fe ff ff           	jmp 0xfffffffffffffe40
0x80488e8:   ff 25 58 a1 04 08        	jmp dword [ 0x804a158 ]
0x80488ee:   68 d8 00 00 00           	push 0xd8
0x80488f3:   e9 30 fe ff ff           	jmp 0xfffffffffffffe30
0x80488f8:   ff 25 5c a1 04 08        	jmp dword [ 0x804a15c ]
0x80488fe:   68 e0 00 00 00           	push 0xe0
0x8048903:   e9 20 fe ff ff           	jmp 0xfffffffffffffe20
0x8048908:   ff 25 60 a1 04 08        	jmp dword [ 0x804a160 ]
0x804890e:   68 e8 00 00 00           	push 0xe8
0x8048913:   e9 10 fe ff ff           	jmp 0xfffffffffffffe10
0x8048918:   ff 25 64 a1 04 08        	jmp dword [ 0x804a164 ]
0x804891e:   68 f0 00 00 00           	push 0xf0
0x8048923:   e9 00 fe ff ff           	jmp 0xfffffffffffffe00
0x8048928:   ff 25 68 a1 04 08        	jmp dword [ 0x804a168 ]
0x804892e:   68 f8 00 00 00           	push 0xf8
0x8048933:   e9 f0 fd ff ff           	jmp 0xfffffffffffffdf0
;  section: .plt
;  instructions unaffiliated with functions:
0x8048728:   ff 35 e4 a0 04 08        	push dword [ 0x804a0e4 ]
0x804872e:   ff 25 e8 a0 04 08        	jmp dword [ 0x804a0e8 ]
0x8048734:   00 00                    	add byte [ eax ], al
0x8048736:   00 00                    	add byte [ eax ], al
;  dynamically linked function: sprintf at 0x8048738 -- 0x8048737
;  data inside code section at 0x8048739 -- 0x804873e
0x8048739:   25 ec a0 04 08                                     |%....           |
;  instructions unaffiliated with functions:
0x804873e:   68 00 00 00 00           	push 0x0
0x8048743:   e9 e0 ff ff ff           	jmp 0xffffffffffffffe0
;  dynamically linked function: connect at 0x8048748 -- 0x8048747
;  data inside code section at 0x8048749 -- 0x804874e
0x8048749:   25 f0 a0 04 08                                     |%....           |
;  instructions unaffiliated with functions:
0x804874e:   68 08 00 00 00           	push 0x8
0x8048753:   e9 d0 ff ff ff           	jmp 0xffffffffffffffd0
;  dynamically linked function: signal at 0x8048758 -- 0x8048757
;  data inside code section at 0x8048759 -- 0x804875e
0x8048759:   25 f4 a0 04 08                                     |%....           |
;  instructions unaffiliated with functions:
0x804875e:   68 10 00 00 00           	push 0x10
0x8048763:   e9 c0 ff ff ff           	jmp 0xffffffffffffffc0
;  dynamically linked function: __gmon_start at 0x8048768 -- 0x8048767
;  data inside code section at 0x8048769 -- 0x804876e
0x8048769:   25 f8 a0 04 08                                     |%....           |
;  instructions unaffiliated with functions:
0x804876e:   68 18 00 00 00           	push 0x18
0x8048773:   e9 b0 ff ff ff           	jmp 0xffffffffffffffb0
;  dynamically linked function: rewind at 0x8048778 -- 0x8048777
;  data inside code section at 0x8048779 -- 0x804877e
0x8048779:   25 fc a0 04 08                                     |%....           |
;  instructions unaffiliated with functions:
0x804877e:   68 20 00 00 00           	push 0x20
0x8048783:   e9 a0 ff ff ff           	jmp 0xffffffffffffffa0
;  dynamically linked function: sscanf at 0x8048788 -- 0x8048787
;  data inside code section at 0x8048789 -- 0x804878e
0x8048789:   25 00 a1 04 08                                     |%....           |
;  instructions unaffiliated with functions:
0x804878e:   68 28 00 00 00           	push 0x28
0x8048793:   e9 90 ff ff ff           	jmp 0xffffffffffffff90
;  dynamically linked function: getenv at 0x8048798 -- 0x8048797
;  data inside code section at 0x8048799 -- 0x804879e
0x8048799:   25 04 a1 04 08                                     |%....           |
;  instructions unaffiliated with functions:
0x804879e:   68 30 00 00 00           	push 0x30
0x80487a3:   e9 80 ff ff ff           	jmp 0xffffffffffffff80
;  dynamically linked function: system at 0x80487a8 -- 0x80487a7
;  data inside code section at 0x80487a9 -- 0x80487ae
0x80487a9:   25 08 a1 04 08                                     |%....           |
;  instructions unaffiliated with functions:
0x80487ae:   68 38 00 00 00           	push 0x38
0x80487b3:   e9 70 ff ff ff           	jmp 0xffffffffffffff70
;  dynamically linked function: fgets at 0x80487b8 -- 0x80487b7
;  data inside code section at 0x80487b9 -- 0x80487be
0x80487b9:   25 0c a1 04 08                                     |%....           |
;  instructions unaffiliated with functions:
0x80487be:   68 40 00 00 00           	push 0x40
0x80487c3:   e9 60 ff ff ff           	jmp 0xffffffffffffff60
;  dynamically linked function: __libc_start_main at 0x80487c8 -- 0x80487c7
;  data inside code section at 0x80487c9 -- 0x80487ce
0x80487c9:   25 10 a1 04 08                                     |%....           |
;  instructions unaffiliated with functions:
0x80487ce:   68 48 00 00 00           	push 0x48
0x80487d3:   e9 50 ff ff ff           	jmp 0xffffffffffffff50
;  dynamically linked function: tmpfile at 0x80487d8 -- 0x80487d7
;  data inside code section at 0x80487d9 -- 0x80487de
0x80487d9:   25 14 a1 04 08                                     |%....           |
;  instructions unaffiliated with functions:
0x80487de:   68 50 00 00 00           	push 0x50
0x80487e3:   e9 40 ff ff ff           	jmp 0xffffffffffffff40
;  dynamically linked function: strtol at 0x80487e8 -- 0x80487e7
;  data inside code section at 0x80487e9 -- 0x80487ee
0x80487e9:   25 18 a1 04 08                                     |%....           |
;  instructions unaffiliated with functions:
0x80487ee:   68 58 00 00 00           	push 0x58
0x80487f3:   e9 30 ff ff ff           	jmp 0xffffffffffffff30
;  dynamically linked function: fflush at 0x80487f8 -- 0x80487f7
;  data inside code section at 0x80487f9 -- 0x80487fe
0x80487f9:   25 1c a1 04 08                                     |%....           |
;  instructions unaffiliated with functions:
0x80487fe:   68 60 00 00 00           	push 0x60
0x8048803:   e9 20 ff ff ff           	jmp 0xffffffffffffff20
;  dynamically linked function: socket at 0x8048808 -- 0x8048807
;  data inside code section at 0x8048809 -- 0x804880e
0x8048809:   25 20 a1 04 08                                     |% ...           |
;  instructions unaffiliated with functions:
0x804880e:   68 68 00 00 00           	push 0x68
0x8048813:   e9 10 ff ff ff           	jmp 0xffffffffffffff10
;  dynamically linked function: __ctype_b_loc at 0x8048818 -- 0x8048817
;  data inside code section at 0x8048819 -- 0x804881e
0x8048819:   25 24 a1 04 08                                     |%$...           |
;  instructions unaffiliated with functions:
0x804881e:   68 70 00 00 00           	push 0x70
0x8048823:   e9 00 ff ff ff           	jmp 0xffffffffffffff00
;  dynamically linked function: fclose at 0x8048828 -- 0x8048827
;  data inside code section at 0x8048829 -- 0x804882e
0x8048829:   25 28 a1 04 08                                     |%(...           |
;  instructions unaffiliated with functions:
0x804882e:   68 78 00 00 00           	push 0x78
0x8048833:   e9 f0 fe ff ff           	jmp 0xfffffffffffffef0
;  dynamically linked function: bcopy at 0x8048838 -- 0x8048837
;  data inside code section at 0x8048839 -- 0x804883e
0x8048839:   25 2c a1 04 08                                     |%,...           |
;  instructions unaffiliated with functions:
0x804883e:   68 80 00 00 00           	push 0x80
0x8048843:   e9 e0 fe ff ff           	jmp 0xfffffffffffffee0
;  dynamically linked function: dup at 0x8048848 -- 0x8048847
;  data inside code section at 0x8048849 -- 0x804884e
0x8048849:   25 30 a1 04 08                                     |%0...           |
;  instructions unaffiliated with functions:
0x804884e:   68 88 00 00 00           	push 0x88
0x8048853:   e9 d0 fe ff ff           	jmp 0xfffffffffffffed0
;  dynamically linked function: fopen at 0x8048858 -- 0x8048857
;  data inside code section at 0x8048859 -- 0x804885e
0x8048859:   25 34 a1 04 08                                     |%4...           |
;  instructions unaffiliated with functions:
0x804885e:   68 90 00 00 00           	push 0x90
0x8048863:   e9 c0 fe ff ff           	jmp 0xfffffffffffffec0
;  dynamically linked function: strcpy at 0x8048868 -- 0x8048867
;  data inside code section at 0x8048869 -- 0x804886e
0x8048869:   25 38 a1 04 08                                     |%8...           |
;  instructions unaffiliated with functions:
0x804886e:   68 98 00 00 00           	push 0x98
0x8048873:   e9 b0 fe ff ff           	jmp 0xfffffffffffffeb0
;  dynamically linked function: printf at 0x8048878 -- 0x8048877
;  data inside code section at 0x8048879 -- 0x804887e
0x8048879:   25 3c a1 04 08                                     |%<...           |
;  instructions unaffiliated with functions:
0x804887e:   68 a0 00 00 00           	push 0xa0
0x8048883:   e9 a0 fe ff ff           	jmp 0xfffffffffffffea0
;  dynamically linked function: strcasecmp at 0x8048888 -- 0x8048887
;  data inside code section at 0x8048889 -- 0x804888e
0x8048889:   25 40 a1 04 08                                     |%@...           |
;  instructions unaffiliated with functions:
0x804888e:   68 a8 00 00 00           	push 0xa8
0x8048893:   e9 90 fe ff ff           	jmp 0xfffffffffffffe90
;  dynamically linked function: close at 0x8048898 -- 0x8048897
;  data inside code section at 0x8048899 -- 0x804889e
0x8048899:   25 44 a1 04 08                                     |%D...           |
;  instructions unaffiliated with functions:
0x804889e:   68 b0 00 00 00           	push 0xb0
0x80488a3:   e9 80 fe ff ff           	jmp 0xfffffffffffffe80
;  dynamically linked function: fwrite at 0x80488a8 -- 0x80488a7
;  data inside code section at 0x80488a9 -- 0x80488ae
0x80488a9:   25 48 a1 04 08                                     |%H...           |
;  instructions unaffiliated with functions:
0x80488ae:   68 b8 00 00 00           	push 0xb8
0x80488b3:   e9 70 fe ff ff           	jmp 0xfffffffffffffe70
;  dynamically linked function: fprintf at 0x80488b8 -- 0x80488b7
;  data inside code section at 0x80488b9 -- 0x80488be
0x80488b9:   25 4c a1 04 08                                     |%L...           |
;  instructions unaffiliated with functions:
0x80488be:   68 c0 00 00 00           	push 0xc0
0x80488c3:   e9 60 fe ff ff           	jmp 0xfffffffffffffe60
;  dynamically linked function: cuserid at 0x80488c8 -- 0x80488c7
;  data inside code section at 0x80488c9 -- 0x80488ce
0x80488c9:   25 50 a1 04 08                                     |%P...           |
;  instructions unaffiliated with functions:
0x80488ce:   68 c8 00 00 00           	push 0xc8
0x80488d3:   e9 50 fe ff ff           	jmp 0xfffffffffffffe50
;  dynamically linked function: gethostname at 0x80488d8 -- 0x80488d7
;  data inside code section at 0x80488d9 -- 0x80488de
0x80488d9:   25 54 a1 04 08                                     |%T...           |
;  instructions unaffiliated with functions:
0x80488de:   68 d0 00 00 00           	push 0xd0
0x80488e3:   e9 40 fe ff ff           	jmp 0xfffffffffffffe40
;  dynamically linked function: fputc at 0x80488e8 -- 0x80488e7
;  data inside code section at 0x80488e9 -- 0x80488ee
0x80488e9:   25 58 a1 04 08                                     |%X...           |
;  instructions unaffiliated with functions:
0x80488ee:   68 d8 00 00 00           	push 0xd8
0x80488f3:   e9 30 fe ff ff           	jmp 0xfffffffffffffe30
;  dynamically linked function: sleep at 0x80488f8 -- 0x80488f7
;  data inside code section at 0x80488f9 -- 0x80488fe
0x80488f9:   25 5c a1 04 08                                     |%\...           |
;  instructions unaffiliated with functions:
0x80488fe:   68 e0 00 00 00           	push 0xe0
0x8048903:   e9 20 fe ff ff           	jmp 0xfffffffffffffe20
;  dynamically linked function: puts at 0x8048908 -- 0x8048907
;  data inside code section at 0x8048909 -- 0x804890e
0x8048909:   25 60 a1 04 08                                     |%`...           |
;  instructions unaffiliated with functions:
0x804890e:   68 e8 00 00 00           	push 0xe8
0x8048913:   e9 10 fe ff ff           	jmp 0xfffffffffffffe10
;  dynamically linked function: gethostbyname at 0x8048918 -- 0x8048917
;  data inside code section at 0x8048919 -- 0x804891e
0x8048919:   25 64 a1 04 08                                     |%d...           |
;  instructions unaffiliated with functions:
0x804891e:   68 f0 00 00 00           	push 0xf0
0x8048923:   e9 00 fe ff ff           	jmp 0xfffffffffffffe00
;  dynamically linked function: exit at 0x8048928 -- 0x8048927
;  data inside code section at 0x8048929 -- 0x804892e
0x8048929:   25 68 a1 04 08                                     |%h...           |
;  instructions unaffiliated with functions:
0x804892e:   68 f8 00 00 00           	push 0xf8
0x8048933:   e9 f0 fd ff ff           	jmp 0xfffffffffffffdf0
;  section: .text
;  function: _start at 0x8048940 -- 0x804896f
0x8048940:   31 ed                    	xor ebp, ebp
0x8048942:   5e                       	pop esi
0x8048943:   89 e1                    	mov ecx, esp
0x8048945:   83 e4 f0                 	and esp, 0xfffffffffffffff0
0x8048948:   50                       	push eax
0x8048949:   54                       	push esp
0x804894a:   52                       	push edx
0x804894b:   68 f0 95 04 08           	push 0x80495f0 ;  Address of function: __libc_csu_fini
0x8048950:   68 00 96 04 08           	push 0x8049600 ;  Address of function: __libc_csu_init
0x8048955:   51                       	push ecx
0x8048956:   56                       	push esi
0x8048957:   68 f4 89 04 08           	push 0x80489f4 ;  Address of function: main
0x804895c:   e8 67 fe ff ff           	call 0x80487c8  <__libc_start_main>
0x8048961:   f4                       	hlt
0x8048962:   90                       	nop
0x8048963:   90                       	nop
0x8048964:   90                       	nop
0x8048965:   90                       	nop
0x8048966:   90                       	nop
0x8048967:   90                       	nop
0x8048968:   90                       	nop
0x8048969:   90                       	nop
0x804896a:   90                       	nop
0x804896b:   90                       	nop
0x804896c:   90                       	nop
0x804896d:   90                       	nop
0x804896e:   90                       	nop
0x804896f:   90                       	nop
;  function: __do_global_dtors_aux at 0x8048970 -- 0x80489c5
0x8048970:   55                       	push ebp
0x8048971:   89 e5                    	mov ebp, esp
0x8048973:   53                       	push ebx
0x8048974:   8d 64 24 fc              	lea esp, dword [ esp  + 0xfffffffffffffffc ]
0x8048978:   80 3d 44 a8 04 08 00     	cmp byte [ 0x804a844 ], 0x0
0x804897f:   75 3e                    	jnz  0x80489bf  <__do_global_dtors_aux+0x4f>
0x8048981:   bb 0c a0 04 08           	mov ebx, 0x804a00c
0x8048986:   a1 48 a8 04 08           	mov eax, dword [ 0x804a848 ]
0x804898b:   81 eb 08 a0 04 08        	sub ebx, 0x804a008
0x8048991:   c1 fb 02                 	sar ebx, 0x2
0x8048994:   83 eb 01                 	sub ebx, 0x1
0x8048997:   39 d8                    	cmp eax, ebx
0x8048999:   73 1d                    	jnc  0x80489b8  <__do_global_dtors_aux+0x48>
0x804899b:   90                       	nop
0x804899c:   8d 74 26 00              	lea esi, dword [ esi  + 0x0 ]
0x80489a0:   83 c0 01                 	add eax, 0x1
0x80489a3:   a3 48 a8 04 08           	mov dword [ 0x804a848 ], eax
0x80489a8:   ff 14 85 08 a0 04 08     	call dword [ eax * 0x2 + 0x804a008 ]
0x80489af:   a1 48 a8 04 08           	mov eax, dword [ 0x804a848 ]
0x80489b4:   39 d8                    	cmp eax, ebx
0x80489b6:   72 e8                    	jc  0x80489a0  <__do_global_dtors_aux+0x30>
0x80489b8:   c6 05 44 a8 04 08 01     	mov byte [ 0x804a844 ], 0x1
0x80489bf:   8d 64 24 04              	lea esp, dword [ esp  + 0x4 ]
0x80489c3:   5b                       	pop ebx
0x80489c4:   5d                       	pop ebp
0x80489c5:   c3                       	ret
;  function: function_80489c6 at 0x80489c6 -- 0x80489cf
0x80489c6:   8d 76 00                 	lea esi, dword [ esi + 0x0 ]
0x80489c9:   8d bc 27 00 00 00 00     	lea edi, dword [ edi  + 0x0 ]
;  function: frame_dummy at 0x80489d0 -- 0x80489f3
0x80489d0:   55                       	push ebp
0x80489d1:   89 e5                    	mov ebp, esp
0x80489d3:   8d 64 24 e8              	lea esp, dword [ esp  + 0xffffffffffffffe8 ]
0x80489d7:   a1 10 a0 04 08           	mov eax, dword [ 0x804a010 ]
0x80489dc:   85 c0                    	test eax, eax
0x80489de:   74 12                    	jz  0x80489f2  <frame_dummy+0x22>
0x80489e0:   b8 00 00 00 00           	mov eax, 0x0
0x80489e5:   85 c0                    	test eax, eax
0x80489e7:   74 09                    	jz  0x80489f2  <frame_dummy+0x22>
0x80489e9:   c7 04 24 10 a0 04 08     	mov dword [ esp  ], 0x804a010
0x80489f0:   ff d0                    	call eax
0x80489f2:   c9                       	leave
0x80489f3:   c3                       	ret
;  function: main at 0x80489f4 -- 0x8048b4f
0x80489f4:   55                       	push ebp
0x80489f5:   89 e5                    	mov ebp, esp
0x80489f7:   83 e4 f0                 	and esp, 0xfffffffffffffff0
0x80489fa:   56                       	push esi
0x80489fb:   53                       	push ebx
0x80489fc:   83 ec 18                 	sub esp, 0x18
0x80489ff:   8b 45 08                 	mov eax, dword [ ebp + 0x8 ]
0x8048a02:   8b 75 0c                 	mov esi, dword [ ebp + 0xc ]
0x8048a05:   83 f8 01                 	cmp eax, 0x1
0x8048a08:   75 0c                    	jnz  0x8048a16  <main+0x22>
0x8048a0a:   a1 20 a8 04 08           	mov eax, dword [ 0x804a820 ]
0x8048a0f:   a3 50 a8 04 08           	mov dword [ 0x804a850 ], eax
0x8048a14:   eb 65                    	jmp 0x8048a7b  <main+0x87>
0x8048a16:   83 f8 02                 	cmp eax, 0x2
0x8048a19:   75 42                    	jnz  0x8048a5d  <main+0x69>
0x8048a1b:   8d 5e 04                 	lea ebx, dword [ esi + 0x4 ]
0x8048a1e:   c7 44 24 04 d2 98 04 08  	mov dword [ esp  + 0x4 ], 0x80498d2 ;  "r\x00"
0x8048a26:   8b 03                    	mov eax, dword [ ebx ]
0x8048a28:   89 04 24                 	mov dword [ esp  ], eax
0x8048a2b:   e8 28 fe ff ff           	call 0x8048858  <fopen>
0x8048a30:   a3 50 a8 04 08           	mov dword [ 0x804a850 ], eax
0x8048a35:   85 c0                    	test eax, eax
0x8048a37:   75 42                    	jnz  0x8048a7b  <main+0x87>
0x8048a39:   8b 03                    	mov eax, dword [ ebx ]
0x8048a3b:   89 44 24 08              	mov dword [ esp  + 0x8 ], eax
0x8048a3f:   8b 06                    	mov eax, dword [ esi ]
0x8048a41:   89 44 24 04              	mov dword [ esp  + 0x4 ], eax
0x8048a45:   c7 04 24 cc 96 04 08     	mov dword [ esp  ], 0x80496cc ;  "%s: Error: Couldn't open %s\n\x00"
0x8048a4c:   e8 27 fe ff ff           	call 0x8048878  <printf>
0x8048a51:   c7 04 24 08 00 00 00     	mov dword [ esp  ], 0x8
0x8048a58:   e8 cb fe ff ff           	call 0x8048928  <exit>
0x8048a5d:   8b 06                    	mov eax, dword [ esi ]
0x8048a5f:   89 44 24 04              	mov dword [ esp  + 0x4 ], eax
0x8048a63:   c7 04 24 e9 96 04 08     	mov dword [ esp  ], 0x80496e9 ;  "Usage: %s [<input_file>]\n\x00"
0x8048a6a:   e8 09 fe ff ff           	call 0x8048878  <printf>
0x8048a6f:   c7 04 24 08 00 00 00     	mov dword [ esp  ], 0x8
0x8048a76:   e8 ad fe ff ff           	call 0x8048928  <exit>
0x8048a7b:   e8 b1 0a 00 00           	call 0x8049531  <initialize_bomb>
0x8048a80:   c7 04 24 50 97 04 08     	mov dword [ esp  ], 0x8049750 ;  "Welcome to my fiendish little bomb. You have 6 phases with\x00"
0x8048a87:   e8 7c fe ff ff           	call 0x8048908  <puts>
0x8048a8c:   c7 04 24 8c 97 04 08     	mov dword [ esp  ], 0x804978c ;  "which to blow yourself up. Have a nice day!\x00"
0x8048a93:   e8 70 fe ff ff           	call 0x8048908  <puts>
0x8048a98:   e8 49 08 00 00           	call 0x80492e6  <read_line>
0x8048a9d:   89 04 24                 	mov dword [ esp  ], eax
0x8048aa0:   e8 93 03 00 00           	call 0x8048e38  <phase_1>
0x8048aa5:   e8 9c 06 00 00           	call 0x8049146  <phase_defused>
0x8048aaa:   c7 04 24 b8 97 04 08     	mov dword [ esp  ], 0x80497b8 ;  "Phase 1 defused. How about the next one?\x00"
0x8048ab1:   e8 52 fe ff ff           	call 0x8048908  <puts>
0x8048ab6:   e8 2b 08 00 00           	call 0x80492e6  <read_line>
0x8048abb:   89 04 24                 	mov dword [ esp  ], eax
0x8048abe:   e8 38 03 00 00           	call 0x8048dfb  <phase_2>
0x8048ac3:   e8 7e 06 00 00           	call 0x8049146  <phase_defused>
0x8048ac8:   c7 04 24 03 97 04 08     	mov dword [ esp  ], 0x8049703 ;  "That's number 2.  Keep going!\x00"
0x8048acf:   e8 34 fe ff ff           	call 0x8048908  <puts>
0x8048ad4:   e8 0d 08 00 00           	call 0x80492e6  <read_line>
0x8048ad9:   89 04 24                 	mov dword [ esp  ], eax
0x8048adc:   e8 8b 02 00 00           	call 0x8048d6c  <phase_3>
0x8048ae1:   e8 60 06 00 00           	call 0x8049146  <phase_defused>
0x8048ae6:   c7 04 24 21 97 04 08     	mov dword [ esp  ], 0x8049721 ;  "Halfway there!\x00"
0x8048aed:   e8 16 fe ff ff           	call 0x8048908  <puts>
0x8048af2:   e8 ef 07 00 00           	call 0x80492e6  <read_line>
0x8048af7:   89 04 24                 	mov dword [ esp  ], eax
0x8048afa:   e8 24 02 00 00           	call 0x8048d23  <phase_4>
0x8048aff:   e8 42 06 00 00           	call 0x8049146  <phase_defused>
0x8048b04:   c7 04 24 e4 97 04 08     	mov dword [ esp  ], 0x80497e4 ;  "So you got that one.  Try this one.\x00"
0x8048b0b:   e8 f8 fd ff ff           	call 0x8048908  <puts>
0x8048b10:   e8 d1 07 00 00           	call 0x80492e6  <read_line>
0x8048b15:   89 04 24                 	mov dword [ esp  ], eax
0x8048b18:   e8 b5 01 00 00           	call 0x8048cd2  <phase_5>
0x8048b1d:   e8 24 06 00 00           	call 0x8049146  <phase_defused>
0x8048b22:   c7 04 24 30 97 04 08     	mov dword [ esp  ], 0x8049730 ;  "Good work!  On to the next...\x00"
0x8048b29:   e8 da fd ff ff           	call 0x8048908  <puts>
0x8048b2e:   e8 b3 07 00 00           	call 0x80492e6  <read_line>
0x8048b33:   89 04 24                 	mov dword [ esp  ], eax
0x8048b36:   e8 52 01 00 00           	call 0x8048c8d  <phase_6>
0x8048b3b:   e8 06 06 00 00           	call 0x8049146  <phase_defused>
0x8048b40:   b8 00 00 00 00           	mov eax, 0x0
0x8048b45:   83 c4 18                 	add esp, 0x18
0x8048b48:   5b                       	pop ebx
0x8048b49:   5e                       	pop esi
0x8048b4a:   89 ec                    	mov esp, ebp
0x8048b4c:   5d                       	pop ebp
0x8048b4d:   c3                       	ret
0x8048b4e:   90                       	nop
0x8048b4f:   90                       	nop
;  function: func4 at 0x8048b50 -- 0x8048b79
0x8048b50:   55                       	push ebp
0x8048b51:   89 e5                    	mov ebp, esp
0x8048b53:   83 ec 18                 	sub esp, 0x18
0x8048b56:   8b 55 08                 	mov edx, dword [ ebp + 0x8 ]
0x8048b59:   b8 01 00 00 00           	mov eax, 0x1
0x8048b5e:   85 d2                    	test edx, edx
0x8048b60:   7e 16                    	jle  0x8048b78  <func4+0x28>
0x8048b62:   83 ea 01                 	sub edx, 0x1
0x8048b65:   89 14 24                 	mov dword [ esp  ], edx
0x8048b68:   e8 e3 ff ff ff           	call 0x8048b50  <func4>
0x8048b6d:   8d 14 c5 00 00 00 00     	lea edx, dword [ eax * 0x3 + 0x0 ]
0x8048b74:   29 c2                    	sub edx, eax
0x8048b76:   89 d0                    	mov eax, edx
0x8048b78:   c9                       	leave
0x8048b79:   c3                       	ret
;  function: fun6 at 0x8048b7a -- 0x8048bd5
0x8048b7a:   55                       	push ebp
0x8048b7b:   89 e5                    	mov ebp, esp
0x8048b7d:   57                       	push edi
0x8048b7e:   56                       	push esi
0x8048b7f:   53                       	push ebx
0x8048b80:   8b 55 08                 	mov edx, dword [ ebp + 0x8 ]
0x8048b83:   8b 72 08                 	mov esi, dword [ edx + 0x8 ]
0x8048b86:   c7 42 08 00 00 00 00     	mov dword [ edx + 0x8 ], 0x0
0x8048b8d:   89 d0                    	mov eax, edx
0x8048b8f:   89 d1                    	mov ecx, edx
0x8048b91:   89 d7                    	mov edi, edx
0x8048b93:   85 f6                    	test esi, esi
0x8048b95:   75 2e                    	jnz  0x8048bc5  <fun6+0x4b>
0x8048b97:   eb 38                    	jmp 0x8048bd1  <fun6+0x57>
0x8048b99:   89 d1                    	mov ecx, edx
0x8048b9b:   8b 51 08                 	mov edx, dword [ ecx + 0x8 ]
0x8048b9e:   85 d2                    	test edx, edx
0x8048ba0:   74 04                    	jz  0x8048ba6  <fun6+0x2c>
0x8048ba2:   39 1a                    	cmp dword [ edx ], ebx
0x8048ba4:   7f f3                    	jg  0x8048b99  <fun6+0x1f>
0x8048ba6:   89 cf                    	mov edi, ecx
0x8048ba8:   89 d1                    	mov ecx, edx
0x8048baa:   39 cf                    	cmp edi, ecx
0x8048bac:   75 04                    	jnz  0x8048bb2  <fun6+0x38>
0x8048bae:   89 f0                    	mov eax, esi
0x8048bb0:   eb 03                    	jmp 0x8048bb5  <fun6+0x3b>
0x8048bb2:   89 77 08                 	mov dword [ edi + 0x8 ], esi
0x8048bb5:   8b 56 08                 	mov edx, dword [ esi + 0x8 ]
0x8048bb8:   89 4e 08                 	mov dword [ esi + 0x8 ], ecx
0x8048bbb:   85 d2                    	test edx, edx
0x8048bbd:   74 12                    	jz  0x8048bd1  <fun6+0x57>
0x8048bbf:   89 d6                    	mov esi, edx
0x8048bc1:   89 c1                    	mov ecx, eax
0x8048bc3:   89 c7                    	mov edi, eax
0x8048bc5:   85 c9                    	test ecx, ecx
0x8048bc7:   74 e1                    	jz  0x8048baa  <fun6+0x30>
0x8048bc9:   8b 1e                    	mov ebx, dword [ esi ]
0x8048bcb:   39 19                    	cmp dword [ ecx ], ebx
0x8048bcd:   7f cc                    	jg  0x8048b9b  <fun6+0x21>
0x8048bcf:   eb d9                    	jmp 0x8048baa  <fun6+0x30>
0x8048bd1:   5b                       	pop ebx
0x8048bd2:   5e                       	pop esi
0x8048bd3:   5f                       	pop edi
0x8048bd4:   5d                       	pop ebp
0x8048bd5:   c3                       	ret
;  function: fun7 at 0x8048bd6 -- 0x8048c26
0x8048bd6:   55                       	push ebp
0x8048bd7:   89 e5                    	mov ebp, esp
0x8048bd9:   53                       	push ebx
0x8048bda:   83 ec 14                 	sub esp, 0x14
0x8048bdd:   8b 55 08                 	mov edx, dword [ ebp + 0x8 ]
0x8048be0:   8b 4d 0c                 	mov ecx, dword [ ebp + 0xc ]
0x8048be3:   b8 ff ff ff ff           	mov eax, 0xffffffffffffffff
0x8048be8:   85 d2                    	test edx, edx
0x8048bea:   74 35                    	jz  0x8048c21  <fun7+0x4b>
0x8048bec:   8b 1a                    	mov ebx, dword [ edx ]
0x8048bee:   39 cb                    	cmp ebx, ecx
0x8048bf0:   7e 13                    	jle  0x8048c05  <fun7+0x2f>
0x8048bf2:   89 4c 24 04              	mov dword [ esp  + 0x4 ], ecx
0x8048bf6:   8b 42 04                 	mov eax, dword [ edx + 0x4 ]
0x8048bf9:   89 04 24                 	mov dword [ esp  ], eax
0x8048bfc:   e8 d5 ff ff ff           	call 0x8048bd6  <fun7>
0x8048c01:   01 c0                    	add eax, eax
0x8048c03:   eb 1c                    	jmp 0x8048c21  <fun7+0x4b>
0x8048c05:   b8 00 00 00 00           	mov eax, 0x0
0x8048c0a:   39 cb                    	cmp ebx, ecx
0x8048c0c:   74 13                    	jz  0x8048c21  <fun7+0x4b>
0x8048c0e:   89 4c 24 04              	mov dword [ esp  + 0x4 ], ecx
0x8048c12:   8b 42 08                 	mov eax, dword [ edx + 0x8 ]
0x8048c15:   89 04 24                 	mov dword [ esp  ], eax
0x8048c18:   e8 b9 ff ff ff           	call 0x8048bd6  <fun7>
0x8048c1d:   8d 44 00 01              	lea eax, dword [ eax + eax * 0x0 + 0x1 ]
0x8048c21:   83 c4 14                 	add esp, 0x14
0x8048c24:   5b                       	pop ebx
0x8048c25:   5d                       	pop ebp
0x8048c26:   c3                       	ret
;  function: secret_phase at 0x8048c27 -- 0x8048c8c
0x8048c27:   55                       	push ebp
0x8048c28:   89 e5                    	mov ebp, esp
0x8048c2a:   53                       	push ebx
0x8048c2b:   83 ec 14                 	sub esp, 0x14
0x8048c2e:   e8 b3 06 00 00           	call 0x80492e6  <read_line>
0x8048c33:   c7 44 24 08 0a 00 00 00  	mov dword [ esp  + 0x8 ], 0xa
0x8048c3b:   c7 44 24 04 00 00 00 00  	mov dword [ esp  + 0x4 ], 0x0
0x8048c43:   89 04 24                 	mov dword [ esp  ], eax
0x8048c46:   e8 9d fb ff ff           	call 0x80487e8  <strtol>
0x8048c4b:   89 c3                    	mov ebx, eax
0x8048c4d:   8d 40 ff                 	lea eax, dword [ eax + 0xffffffffffffffff ]
0x8048c50:   3d e8 03 00 00           	cmp eax, 0x3e8
0x8048c55:   76 05                    	jbe  0x8048c5c  <secret_phase+0x35>
0x8048c57:   e8 7a 05 00 00           	call 0x80491d6  <explode_bomb>
0x8048c5c:   89 5c 24 04              	mov dword [ esp  + 0x4 ], ebx
0x8048c60:   c7 04 24 d4 a6 04 08     	mov dword [ esp  ], 0x804a6d4
0x8048c67:   e8 6a ff ff ff           	call 0x8048bd6  <fun7>
0x8048c6c:   83 f8 06                 	cmp eax, 0x6
0x8048c6f:   74 05                    	jz  0x8048c76  <secret_phase+0x4f>
0x8048c71:   e8 60 05 00 00           	call 0x80491d6  <explode_bomb>
0x8048c76:   c7 04 24 08 98 04 08     	mov dword [ esp  ], 0x8049808 ;  "Wow! You've defused the secret stage!\x00"
0x8048c7d:   e8 86 fc ff ff           	call 0x8048908  <puts>
0x8048c82:   e8 bf 04 00 00           	call 0x8049146  <phase_defused>
0x8048c87:   83 c4 14                 	add esp, 0x14
0x8048c8a:   5b                       	pop ebx
0x8048c8b:   5d                       	pop ebp
0x8048c8c:   c3                       	ret
;  function: phase_6 at 0x8048c8d -- 0x8048cd1
0x8048c8d:   55                       	push ebp
0x8048c8e:   89 e5                    	mov ebp, esp
0x8048c90:   53                       	push ebx
0x8048c91:   83 ec 14                 	sub esp, 0x14
0x8048c94:   c7 44 24 08 0a 00 00 00  	mov dword [ esp  + 0x8 ], 0xa
0x8048c9c:   c7 44 24 04 00 00 00 00  	mov dword [ esp  + 0x4 ], 0x0
0x8048ca4:   8b 45 08                 	mov eax, dword [ ebp + 0x8 ]
0x8048ca7:   89 04 24                 	mov dword [ esp  ], eax
0x8048caa:   e8 39 fb ff ff           	call 0x80487e8  <strtol>
0x8048caf:   89 c3                    	mov ebx, eax
0x8048cb1:   c7 04 24 20 a6 04 08     	mov dword [ esp  ], 0x804a620
0x8048cb8:   e8 bd fe ff ff           	call 0x8048b7a  <fun6>
0x8048cbd:   8b 40 08                 	mov eax, dword [ eax + 0x8 ]
0x8048cc0:   8b 40 08                 	mov eax, dword [ eax + 0x8 ]
0x8048cc3:   39 18                    	cmp dword [ eax ], ebx
0x8048cc5:   74 05                    	jz  0x8048ccc  <phase_6+0x3f>
0x8048cc7:   e8 0a 05 00 00           	call 0x80491d6  <explode_bomb>
0x8048ccc:   83 c4 14                 	add esp, 0x14
0x8048ccf:   5b                       	pop ebx
0x8048cd0:   5d                       	pop ebp
0x8048cd1:   c3                       	ret
;  function: phase_5 at 0x8048cd2 -- 0x8048d22
0x8048cd2:   55                       	push ebp
0x8048cd3:   89 e5                    	mov ebp, esp
0x8048cd5:   57                       	push edi
0x8048cd6:   56                       	push esi
0x8048cd7:   53                       	push ebx
0x8048cd8:   83 ec 1c                 	sub esp, 0x1c
0x8048cdb:   8b 5d 08                 	mov ebx, dword [ ebp + 0x8 ]
0x8048cde:   89 1c 24                 	mov dword [ esp  ], ebx
0x8048ce1:   e8 8a 01 00 00           	call 0x8048e70  <string_length>
0x8048ce6:   83 f8 06                 	cmp eax, 0x6
0x8048ce9:   74 05                    	jz  0x8048cf0  <phase_5+0x1e>
0x8048ceb:   e8 e6 04 00 00           	call 0x80491d6  <explode_bomb>
0x8048cf0:   ba 00 00 00 00           	mov edx, 0x0
0x8048cf5:   b8 00 00 00 00           	mov eax, 0x0
0x8048cfa:   b9 80 98 04 08           	mov ecx, 0x8049880
0x8048cff:   0f be 34 03              	movsx esi, byte [ ebx + eax * 0x0 ]
0x8048d03:   83 e6 0f                 	and esi, 0xf
0x8048d06:   03 14 b1                 	add edx, dword [ ecx + esi * 0x2 ]
0x8048d09:   83 c0 01                 	add eax, 0x1
0x8048d0c:   83 f8 06                 	cmp eax, 0x6
0x8048d0f:   75 ee                    	jnz  0x8048cff  <phase_5+0x2d>
0x8048d11:   83 fa 2d                 	cmp edx, 0x2d
0x8048d14:   74 05                    	jz  0x8048d1b  <phase_5+0x49>
0x8048d16:   e8 bb 04 00 00           	call 0x80491d6  <explode_bomb>
0x8048d1b:   83 c4 1c                 	add esp, 0x1c
0x8048d1e:   5b                       	pop ebx
0x8048d1f:   5e                       	pop esi
0x8048d20:   5f                       	pop edi
0x8048d21:   5d                       	pop ebp
0x8048d22:   c3                       	ret
;  function: phase_4 at 0x8048d23 -- 0x8048d6b
0x8048d23:   55                       	push ebp
0x8048d24:   89 e5                    	mov ebp, esp
0x8048d26:   83 ec 28                 	sub esp, 0x28
0x8048d29:   8d 45 f4                 	lea eax, dword [ ebp + 0xfffffffffffffff4 ]
0x8048d2c:   89 44 24 08              	mov dword [ esp  + 0x8 ], eax
0x8048d30:   c7 44 24 04 2d 9a 04 08  	mov dword [ esp  + 0x4 ], 0x8049a2d ;  "%d\x00"
0x8048d38:   8b 45 08                 	mov eax, dword [ ebp + 0x8 ]
0x8048d3b:   89 04 24                 	mov dword [ esp  ], eax
0x8048d3e:   e8 45 fa ff ff           	call 0x8048788  <sscanf>
0x8048d43:   83 f8 01                 	cmp eax, 0x1
0x8048d46:   75 06                    	jnz  0x8048d4e  <phase_4+0x2b>
0x8048d48:   83 7d f4 00              	cmp dword [ ebp + 0xfffffffffffffff4 ], 0x0
0x8048d4c:   7f 05                    	jg  0x8048d53  <phase_4+0x30>
0x8048d4e:   e8 83 04 00 00           	call 0x80491d6  <explode_bomb>
0x8048d53:   8b 45 f4                 	mov eax, dword [ ebp + 0xfffffffffffffff4 ]
0x8048d56:   89 04 24                 	mov dword [ esp  ], eax
0x8048d59:   e8 f2 fd ff ff           	call 0x8048b50  <func4>
0x8048d5e:   3d 91 cb 01 00           	cmp eax, 0x1cb91
0x8048d63:   74 05                    	jz  0x8048d6a  <phase_4+0x47>
0x8048d65:   e8 6c 04 00 00           	call 0x80491d6  <explode_bomb>
0x8048d6a:   c9                       	leave
0x8048d6b:   c3                       	ret
;  function: phase_3 at 0x8048d6c -- 0x8048dfa
0x8048d6c:   55                       	push ebp
0x8048d6d:   89 e5                    	mov ebp, esp
0x8048d6f:   83 ec 28                 	sub esp, 0x28
0x8048d72:   8d 45 f0                 	lea eax, dword [ ebp + 0xfffffffffffffff0 ]
0x8048d75:   89 44 24 0c              	mov dword [ esp  + 0xc ], eax
0x8048d79:   8d 45 f4                 	lea eax, dword [ ebp + 0xfffffffffffffff4 ]
0x8048d7c:   89 44 24 08              	mov dword [ esp  + 0x8 ], eax
0x8048d80:   c7 44 24 04 2a 9a 04 08  	mov dword [ esp  + 0x4 ], 0x8049a2a ;  "%d %d\x00"
0x8048d88:   8b 45 08                 	mov eax, dword [ ebp + 0x8 ]
0x8048d8b:   89 04 24                 	mov dword [ esp  ], eax
0x8048d8e:   e8 f5 f9 ff ff           	call 0x8048788  <sscanf>
0x8048d93:   83 f8 01                 	cmp eax, 0x1
0x8048d96:   7f 05                    	jg  0x8048d9d  <phase_3+0x31>
0x8048d98:   e8 39 04 00 00           	call 0x80491d6  <explode_bomb>
0x8048d9d:   83 7d f4 07              	cmp dword [ ebp + 0xfffffffffffffff4 ], 0x7
0x8048da1:   77 42                    	ja  0x8048de5  <phase_3+0x79>
0x8048da3:   8b 45 f4                 	mov eax, dword [ ebp + 0xfffffffffffffff4 ]
0x8048da6:   ff 24 85 60 98 04 08     	jmp dword [ eax * 0x2 + 0x8049860 ]
0x8048dad:   b8 d6 00 00 00           	mov eax, 0xd6
0x8048db2:   eb 3b                    	jmp 0x8048def  <phase_3+0x83>
0x8048db4:   b8 a8 02 00 00           	mov eax, 0x2a8
0x8048db9:   eb 34                    	jmp 0x8048def  <phase_3+0x83>
0x8048dbb:   b8 f8 02 00 00           	mov eax, 0x2f8
0x8048dc0:   eb 2d                    	jmp 0x8048def  <phase_3+0x83>
0x8048dc2:   b8 69 03 00 00           	mov eax, 0x369
0x8048dc7:   eb 26                    	jmp 0x8048def  <phase_3+0x83>
0x8048dc9:   b8 29 03 00 00           	mov eax, 0x329
0x8048dce:   eb 1f                    	jmp 0x8048def  <phase_3+0x83>
0x8048dd0:   b8 6a 03 00 00           	mov eax, 0x36a
0x8048dd5:   eb 18                    	jmp 0x8048def  <phase_3+0x83>
0x8048dd7:   b8 56 00 00 00           	mov eax, 0x56
0x8048ddc:   eb 11                    	jmp 0x8048def  <phase_3+0x83>
0x8048dde:   b8 a6 03 00 00           	mov eax, 0x3a6
0x8048de3:   eb 0a                    	jmp 0x8048def  <phase_3+0x83>
0x8048de5:   e8 ec 03 00 00           	call 0x80491d6  <explode_bomb>
0x8048dea:   b8 00 00 00 00           	mov eax, 0x0
0x8048def:   3b 45 f0                 	cmp eax, dword [ ebp + 0xfffffffffffffff0 ]
0x8048df2:   74 05                    	jz  0x8048df9  <phase_3+0x8d>
0x8048df4:   e8 dd 03 00 00           	call 0x80491d6  <explode_bomb>
0x8048df9:   c9                       	leave
0x8048dfa:   c3                       	ret
;  function: phase_2 at 0x8048dfb -- 0x8048e37
0x8048dfb:   55                       	push ebp
0x8048dfc:   89 e5                    	mov ebp, esp
0x8048dfe:   56                       	push esi
0x8048dff:   53                       	push ebx
0x8048e00:   83 ec 30                 	sub esp, 0x30
0x8048e03:   8d 45 e0                 	lea eax, dword [ ebp + 0xffffffffffffffe0 ]
0x8048e06:   89 44 24 04              	mov dword [ esp  + 0x4 ], eax
0x8048e0a:   8b 45 08                 	mov eax, dword [ ebp + 0x8 ]
0x8048e0d:   89 04 24                 	mov dword [ esp  ], eax
0x8048e10:   e8 03 04 00 00           	call 0x8049218  <read_six_numbers>
0x8048e15:   8d 5d e4                 	lea ebx, dword [ ebp + 0xffffffffffffffe4 ]
0x8048e18:   8d 75 f8                 	lea esi, dword [ ebp + 0xfffffffffffffff8 ]
0x8048e1b:   8b 43 fc                 	mov eax, dword [ ebx + 0xfffffffffffffffc ]
0x8048e1e:   83 c0 05                 	add eax, 0x5
0x8048e21:   39 03                    	cmp dword [ ebx ], eax
0x8048e23:   74 05                    	jz  0x8048e2a  <phase_2+0x2f>
0x8048e25:   e8 ac 03 00 00           	call 0x80491d6  <explode_bomb>
0x8048e2a:   83 c3 04                 	add ebx, 0x4
0x8048e2d:   39 f3                    	cmp ebx, esi
0x8048e2f:   75 ea                    	jnz  0x8048e1b  <phase_2+0x20>
0x8048e31:   83 c4 30                 	add esp, 0x30
0x8048e34:   5b                       	pop ebx
0x8048e35:   5e                       	pop esi
0x8048e36:   5d                       	pop ebp
0x8048e37:   c3                       	ret
;  function: phase_1 at 0x8048e38 -- 0x8048e6f
0x8048e38:   55                       	push ebp
0x8048e39:   89 e5                    	mov ebp, esp
0x8048e3b:   83 ec 18                 	sub esp, 0x18
0x8048e3e:   c7 44 24 04 30 98 04 08  	mov dword [ esp  + 0x4 ], 0x8049830
0x8048e46:   8b 45 08                 	mov eax, dword [ ebp + 0x8 ]
0x8048e49:   89 04 24                 	mov dword [ esp  ], eax
0x8048e4c:   e8 3a 00 00 00           	call 0x8048e8b  <strings_not_equal>
0x8048e51:   85 c0                    	test eax, eax
0x8048e53:   74 05                    	jz  0x8048e5a  <phase_1+0x22>
0x8048e55:   e8 7c 03 00 00           	call 0x80491d6  <explode_bomb>
0x8048e5a:   c9                       	leave
0x8048e5b:   90                       	nop
0x8048e5c:   8d 74 26 00              	lea esi, dword [ esi  + 0x0 ]
0x8048e60:   c3                       	ret
0x8048e61:   90                       	nop
0x8048e62:   90                       	nop
0x8048e63:   90                       	nop
0x8048e64:   90                       	nop
0x8048e65:   90                       	nop
0x8048e66:   90                       	nop
0x8048e67:   90                       	nop
0x8048e68:   90                       	nop
0x8048e69:   90                       	nop
0x8048e6a:   90                       	nop
0x8048e6b:   90                       	nop
0x8048e6c:   90                       	nop
0x8048e6d:   90                       	nop
0x8048e6e:   90                       	nop
0x8048e6f:   90                       	nop
;  function: string_length at 0x8048e70 -- 0x8048e8a
0x8048e70:   55                       	push ebp
0x8048e71:   89 e5                    	mov ebp, esp
0x8048e73:   8b 55 08                 	mov edx, dword [ ebp + 0x8 ]
0x8048e76:   b8 00 00 00 00           	mov eax, 0x0
0x8048e7b:   80 3a 00                 	cmp byte [ edx ], 0x0
0x8048e7e:   74 09                    	jz  0x8048e89  <string_length+0x19>
0x8048e80:   83 c0 01                 	add eax, 0x1
0x8048e83:   80 3c 02 00              	cmp byte [ edx + eax * 0x0 ], 0x0
0x8048e87:   75 f7                    	jnz  0x8048e80  <string_length+0x10>
0x8048e89:   5d                       	pop ebp
0x8048e8a:   c3                       	ret
;  function: strings_not_equal at 0x8048e8b -- 0x8048eec
0x8048e8b:   55                       	push ebp
0x8048e8c:   89 e5                    	mov ebp, esp
0x8048e8e:   57                       	push edi
0x8048e8f:   56                       	push esi
0x8048e90:   53                       	push ebx
0x8048e91:   83 ec 04                 	sub esp, 0x4
0x8048e94:   8b 5d 08                 	mov ebx, dword [ ebp + 0x8 ]
0x8048e97:   8b 75 0c                 	mov esi, dword [ ebp + 0xc ]
0x8048e9a:   89 1c 24                 	mov dword [ esp  ], ebx
0x8048e9d:   e8 ce ff ff ff           	call 0x8048e70  <string_length>
0x8048ea2:   89 c7                    	mov edi, eax
0x8048ea4:   89 34 24                 	mov dword [ esp  ], esi
0x8048ea7:   e8 c4 ff ff ff           	call 0x8048e70  <string_length>
0x8048eac:   39 c7                    	cmp edi, eax
0x8048eae:   75 29                    	jnz  0x8048ed9  <strings_not_equal+0x4e>
0x8048eb0:   0f b6 13                 	movzx edx, byte [ ebx ]
0x8048eb3:   84 d2                    	test dl, dl
0x8048eb5:   74 29                    	jz  0x8048ee0  <strings_not_equal+0x55>
0x8048eb7:   b8 00 00 00 00           	mov eax, 0x0
0x8048ebc:   3a 16                    	cmp dl, byte [ esi ]
0x8048ebe:   74 0e                    	jz  0x8048ece  <strings_not_equal+0x43>
0x8048ec0:   eb 17                    	jmp 0x8048ed9  <strings_not_equal+0x4e>
0x8048ec2:   0f b6 4c 06 01           	movzx ecx, byte [ esi + eax * 0x0 + 0x1 ]
0x8048ec7:   83 c0 01                 	add eax, 0x1
0x8048eca:   38 ca                    	cmp dl, cl
0x8048ecc:   75 0b                    	jnz  0x8048ed9  <strings_not_equal+0x4e>
0x8048ece:   0f b6 54 03 01           	movzx edx, byte [ ebx + eax * 0x0 + 0x1 ]
0x8048ed3:   84 d2                    	test dl, dl
0x8048ed5:   75 eb                    	jnz  0x8048ec2  <strings_not_equal+0x37>
0x8048ed7:   eb 07                    	jmp 0x8048ee0  <strings_not_equal+0x55>
0x8048ed9:   b8 01 00 00 00           	mov eax, 0x1
0x8048ede:   eb 05                    	jmp 0x8048ee5  <strings_not_equal+0x5a>
0x8048ee0:   b8 00 00 00 00           	mov eax, 0x0
0x8048ee5:   83 c4 04                 	add esp, 0x4
0x8048ee8:   5b                       	pop ebx
0x8048ee9:   5e                       	pop esi
0x8048eea:   5f                       	pop edi
0x8048eeb:   5d                       	pop ebp
0x8048eec:   c3                       	ret
;  function: send_msg at 0x8048eed -- 0x8049145
0x8048eed:   55                       	push ebp
0x8048eee:   89 e5                    	mov ebp, esp
0x8048ef0:   57                       	push edi
0x8048ef1:   56                       	push esi
0x8048ef2:   53                       	push ebx
0x8048ef3:   81 ec 8c 00 00 00        	sub esp, 0x8c
0x8048ef9:   c7 04 24 00 00 00 00     	mov dword [ esp  ], 0x0
0x8048f00:   e8 43 f9 ff ff           	call 0x8048848  <dup>
0x8048f05:   89 45 94                 	mov dword [ ebp + 0xffffffffffffff94 ], eax
0x8048f08:   83 f8 ff                 	cmp eax, 0xffffffffffffffff
0x8048f0b:   75 18                    	jnz  0x8048f25  <send_msg+0x38>
0x8048f0d:   c7 04 24 c0 98 04 08     	mov dword [ esp  ], 0x80498c0 ;  "ERROR: dup(0) error\x00"
0x8048f14:   e8 ef f9 ff ff           	call 0x8048908  <puts>
0x8048f19:   c7 04 24 08 00 00 00     	mov dword [ esp  ], 0x8
0x8048f20:   e8 03 fa ff ff           	call 0x8048928  <exit>
0x8048f25:   c7 04 24 00 00 00 00     	mov dword [ esp  ], 0x0
0x8048f2c:   e8 67 f9 ff ff           	call 0x8048898  <close>
0x8048f31:   83 f8 ff                 	cmp eax, 0xffffffffffffffff
0x8048f34:   75 18                    	jnz  0x8048f4e  <send_msg+0x61>
0x8048f36:   c7 04 24 d4 98 04 08     	mov dword [ esp  ], 0x80498d4 ;  "ERROR: close error\x00"
0x8048f3d:   e8 c6 f9 ff ff           	call 0x8048908  <puts>
0x8048f42:   c7 04 24 08 00 00 00     	mov dword [ esp  ], 0x8
0x8048f49:   e8 da f9 ff ff           	call 0x8048928  <exit>
0x8048f4e:   e8 85 f8 ff ff           	call 0x80487d8  <tmpfile>
0x8048f53:   89 c7                    	mov edi, eax
0x8048f55:   85 c0                    	test eax, eax
0x8048f57:   75 18                    	jnz  0x8048f71  <send_msg+0x84>
0x8048f59:   c7 04 24 e7 98 04 08     	mov dword [ esp  ], 0x80498e7 ;  "ERROR: tmpfile error\x00"
0x8048f60:   e8 a3 f9 ff ff           	call 0x8048908  <puts>
0x8048f65:   c7 04 24 08 00 00 00     	mov dword [ esp  ], 0x8
0x8048f6c:   e8 b7 f9 ff ff           	call 0x8048928  <exit>
0x8048f71:   89 44 24 0c              	mov dword [ esp  + 0xc ], eax
0x8048f75:   c7 44 24 08 1b 00 00 00  	mov dword [ esp  + 0x8 ], 0x1b
0x8048f7d:   c7 44 24 04 01 00 00 00  	mov dword [ esp  + 0x4 ], 0x1
0x8048f85:   c7 04 24 fc 98 04 08     	mov dword [ esp  ], 0x80498fc ;  "Subject: Bomb notification\n\x00"
0x8048f8c:   e8 17 f9 ff ff           	call 0x80488a8  <fwrite>
0x8048f91:   89 7c 24 04              	mov dword [ esp  + 0x4 ], edi
0x8048f95:   c7 04 24 0a 00 00 00     	mov dword [ esp  ], 0xa
0x8048f9c:   e8 47 f9 ff ff           	call 0x80488e8  <fputc>
0x8048fa1:   c7 04 24 00 00 00 00     	mov dword [ esp  ], 0x0
0x8048fa8:   e8 1b f9 ff ff           	call 0x80488c8  <cuserid>
0x8048fad:   85 c0                    	test eax, eax
0x8048faf:   75 15                    	jnz  0x8048fc6  <send_msg+0xd9>
0x8048fb1:   8d 45 98                 	lea eax, dword [ ebp + 0xffffffffffffff98 ]
0x8048fb4:   c7 00 6e 6f 62 6f        	mov dword [ eax ], 0x6f626f6e
0x8048fba:   66 c7 40 04 64 79        	mov word [ eax + 0x4 ], 0x7964
0x8048fc0:   c6 40 06 00              	mov byte [ eax + 0x6 ], 0x0
0x8048fc4:   eb 0f                    	jmp 0x8048fd5  <send_msg+0xe8>
0x8048fc6:   89 44 24 04              	mov dword [ esp  + 0x4 ], eax
0x8048fca:   8d 45 98                 	lea eax, dword [ ebp + 0xffffffffffffff98 ]
0x8048fcd:   89 04 24                 	mov dword [ esp  ], eax
0x8048fd0:   e8 93 f8 ff ff           	call 0x8048868  <strcpy>
0x8048fd5:   83 7d 08 00              	cmp dword [ ebp + 0x8 ], 0x0
0x8048fd9:   b8 18 99 04 08           	mov eax, 0x8049918 ;  "exploded\x00"
0x8048fde:   ba 21 99 04 08           	mov edx, 0x8049921 ;  "defused\x00"
0x8048fe3:   0f 45 c2                 	cmov nz  eax, edx
0x8048fe6:   8b 15 4c a8 04 08        	mov edx, dword [ 0x804a84c ]
0x8048fec:   89 54 24 18              	mov dword [ esp  + 0x18 ], edx
0x8048ff0:   89 44 24 14              	mov dword [ esp  + 0x14 ], eax
0x8048ff4:   8d 45 98                 	lea eax, dword [ ebp + 0xffffffffffffff98 ]
0x8048ff7:   89 44 24 10              	mov dword [ esp  + 0x10 ], eax
0x8048ffb:   a1 a0 a1 04 08           	mov eax, dword [ 0x804a1a0 ]
0x8049000:   89 44 24 0c              	mov dword [ esp  + 0xc ], eax
0x8049004:   c7 44 24 08 c0 a1 04 08  	mov dword [ esp  + 0x8 ], 0x804a1c0
0x804900c:   c7 44 24 04 29 99 04 08  	mov dword [ esp  + 0x4 ], 0x8049929 ;  "bomb-header:%s:%d:%s:%s:%d\n\x00"
0x8049014:   89 3c 24                 	mov dword [ esp  ], edi
0x8049017:   e8 9c f8 ff ff           	call 0x80488b8  <fprintf>
0x804901c:   83 3d 4c a8 04 08 00     	cmp dword [ 0x804a84c ], 0x0
0x8049023:   7e 48                    	jle  0x804906d  <send_msg+0x180>
0x8049025:   be 60 a8 04 08           	mov esi, 0x804a860
0x804902a:   bb 00 00 00 00           	mov ebx, 0x0
0x804902f:   83 c3 01                 	add ebx, 0x1
0x8049032:   89 74 24 18              	mov dword [ esp  + 0x18 ], esi
0x8049036:   89 5c 24 14              	mov dword [ esp  + 0x14 ], ebx
0x804903a:   8d 45 98                 	lea eax, dword [ ebp + 0xffffffffffffff98 ]
0x804903d:   89 44 24 10              	mov dword [ esp  + 0x10 ], eax
0x8049041:   a1 a0 a1 04 08           	mov eax, dword [ 0x804a1a0 ]
0x8049046:   89 44 24 0c              	mov dword [ esp  + 0xc ], eax
0x804904a:   c7 44 24 08 c0 a1 04 08  	mov dword [ esp  + 0x8 ], 0x804a1c0
0x8049052:   c7 44 24 04 45 99 04 08  	mov dword [ esp  + 0x4 ], 0x8049945 ;  "bomb-string:%s:%d:%s:%d:%s\n\x00"
0x804905a:   89 3c 24                 	mov dword [ esp  ], edi
0x804905d:   e8 56 f8 ff ff           	call 0x80488b8  <fprintf>
0x8049062:   83 c6 50                 	add esi, 0x50
0x8049065:   39 1d 4c a8 04 08        	cmp dword [ 0x804a84c ], ebx
0x804906b:   7f c2                    	jg  0x804902f  <send_msg+0x142>
0x804906d:   89 3c 24                 	mov dword [ esp  ], edi
0x8049070:   e8 03 f7 ff ff           	call 0x8048778  <rewind>
0x8049075:   c7 44 24 10 ee 9a 04 08  	mov dword [ esp  + 0x10 ], 0x8049aee ;  "cs.uml.edu\x00"
0x804907d:   c7 44 24 0c 61 99 04 08  	mov dword [ esp  + 0xc ], 0x8049961 ;  "bomb\x00"
0x8049085:   c7 44 24 08 66 99 04 08  	mov dword [ esp  + 0x8 ], 0x8049966 ;  "/usr/sbin/sendmail -bm\x00"
0x804908d:   c7 44 24 04 7d 99 04 08  	mov dword [ esp  + 0x4 ], 0x804997d ;  "%s %s@%s\x00"
0x8049095:   c7 04 24 a0 ae 04 08     	mov dword [ esp  ], 0x804aea0
0x804909c:   e8 97 f6 ff ff           	call 0x8048738  <sprintf>
0x80490a1:   c7 04 24 a0 ae 04 08     	mov dword [ esp  ], 0x804aea0
0x80490a8:   e8 fb f6 ff ff           	call 0x80487a8  <system>
0x80490ad:   85 c0                    	test eax, eax
0x80490af:   74 18                    	jz  0x80490c9  <send_msg+0x1dc>
0x80490b1:   c7 04 24 86 99 04 08     	mov dword [ esp  ], 0x8049986 ;  "ERROR: notification error\x00"
0x80490b8:   e8 4b f8 ff ff           	call 0x8048908  <puts>
0x80490bd:   c7 04 24 08 00 00 00     	mov dword [ esp  ], 0x8
0x80490c4:   e8 5f f8 ff ff           	call 0x8048928  <exit>
0x80490c9:   89 3c 24                 	mov dword [ esp  ], edi
0x80490cc:   e8 57 f7 ff ff           	call 0x8048828  <fclose>
0x80490d1:   85 c0                    	test eax, eax
0x80490d3:   74 18                    	jz  0x80490ed  <send_msg+0x200>
0x80490d5:   c7 04 24 a0 99 04 08     	mov dword [ esp  ], 0x80499a0 ;  "ERROR: fclose(tmp) error\x00"
0x80490dc:   e8 27 f8 ff ff           	call 0x8048908  <puts>
0x80490e1:   c7 04 24 08 00 00 00     	mov dword [ esp  ], 0x8
0x80490e8:   e8 3b f8 ff ff           	call 0x8048928  <exit>
0x80490ed:   8b 45 94                 	mov eax, dword [ ebp + 0xffffffffffffff94 ]
0x80490f0:   89 04 24                 	mov dword [ esp  ], eax
0x80490f3:   e8 50 f7 ff ff           	call 0x8048848  <dup>
0x80490f8:   85 c0                    	test eax, eax
0x80490fa:   74 18                    	jz  0x8049114  <send_msg+0x227>
0x80490fc:   c7 04 24 b9 99 04 08     	mov dword [ esp  ], 0x80499b9 ;  "ERROR: dup(tmpstdin) error\x00"
0x8049103:   e8 00 f8 ff ff           	call 0x8048908  <puts>
0x8049108:   c7 04 24 08 00 00 00     	mov dword [ esp  ], 0x8
0x804910f:   e8 14 f8 ff ff           	call 0x8048928  <exit>
0x8049114:   8b 45 94                 	mov eax, dword [ ebp + 0xffffffffffffff94 ]
0x8049117:   89 04 24                 	mov dword [ esp  ], eax
0x804911a:   e8 79 f7 ff ff           	call 0x8048898  <close>
0x804911f:   85 c0                    	test eax, eax
0x8049121:   74 18                    	jz  0x804913b  <send_msg+0x24e>
0x8049123:   c7 04 24 d4 99 04 08     	mov dword [ esp  ], 0x80499d4 ;  "ERROR: close(tmpstdin)\x00"
0x804912a:   e8 d9 f7 ff ff           	call 0x8048908  <puts>
0x804912f:   c7 04 24 08 00 00 00     	mov dword [ esp  ], 0x8
0x8049136:   e8 ed f7 ff ff           	call 0x8048928  <exit>
0x804913b:   81 c4 8c 00 00 00        	add esp, 0x8c
0x8049141:   5b                       	pop ebx
0x8049142:   5e                       	pop esi
0x8049143:   5f                       	pop edi
0x8049144:   5d                       	pop ebp
0x8049145:   c3                       	ret
;  function: phase_defused at 0x8049146 -- 0x80491d5
0x8049146:   55                       	push ebp
0x8049147:   89 e5                    	mov ebp, esp
0x8049149:   83 ec 78                 	sub esp, 0x78
0x804914c:   c7 04 24 01 00 00 00     	mov dword [ esp  ], 0x1
0x8049153:   e8 95 fd ff ff           	call 0x8048eed  <send_msg>
0x8049158:   83 3d 4c a8 04 08 06     	cmp dword [ 0x804a84c ], 0x6
0x804915f:   75 73                    	jnz  0x80491d4  <phase_defused+0x8e>
0x8049161:   8d 45 a8                 	lea eax, dword [ ebp + 0xffffffffffffffa8 ]
0x8049164:   89 44 24 0c              	mov dword [ esp  + 0xc ], eax
0x8049168:   8d 45 a4                 	lea eax, dword [ ebp + 0xffffffffffffffa4 ]
0x804916b:   89 44 24 08              	mov dword [ esp  + 0x8 ], eax
0x804916f:   c7 44 24 04 eb 99 04 08  	mov dword [ esp  + 0x4 ], 0x80499eb ;  "%d %s\x00"
0x8049177:   c7 04 24 50 a9 04 08     	mov dword [ esp  ], 0x804a950
0x804917e:   e8 05 f6 ff ff           	call 0x8048788  <sscanf>
0x8049183:   83 f8 02                 	cmp eax, 0x2
0x8049186:   75 34                    	jnz  0x80491bc  <phase_defused+0x76>
0x8049188:   c7 44 24 04 f1 99 04 08  	mov dword [ esp  + 0x4 ], 0x80499f1
0x8049190:   8d 45 a8                 	lea eax, dword [ ebp + 0xffffffffffffffa8 ]
0x8049193:   89 04 24                 	mov dword [ esp  ], eax
0x8049196:   e8 f0 fc ff ff           	call 0x8048e8b  <strings_not_equal>
0x804919b:   85 c0                    	test eax, eax
0x804919d:   75 1d                    	jnz  0x80491bc  <phase_defused+0x76>
0x804919f:   c7 04 24 04 9b 04 08     	mov dword [ esp  ], 0x8049b04 ;  "Curses, you've found the secret phase!\x00"
0x80491a6:   e8 5d f7 ff ff           	call 0x8048908  <puts>
0x80491ab:   c7 04 24 2c 9b 04 08     	mov dword [ esp  ], 0x8049b2c ;  "But finding it and solving it are quite different...\x00"
0x80491b2:   e8 51 f7 ff ff           	call 0x8048908  <puts>
0x80491b7:   e8 6b fa ff ff           	call 0x8048c27  <secret_phase>
0x80491bc:   c7 04 24 64 9b 04 08     	mov dword [ esp  ], 0x8049b64 ;  "Congratulations! You've defused the bomb!\x00"
0x80491c3:   e8 40 f7 ff ff           	call 0x8048908  <puts>
0x80491c8:   c7 04 24 90 9b 04 08     	mov dword [ esp  ], 0x8049b90 ;  "Your instructor has been notified and will verify your solution.\x00"
0x80491cf:   e8 34 f7 ff ff           	call 0x8048908  <puts>
0x80491d4:   c9                       	leave
0x80491d5:   c3                       	ret
;  function: explode_bomb at 0x80491d6 -- 0x8049217
0x80491d6:   55                       	push ebp
0x80491d7:   89 e5                    	mov ebp, esp
0x80491d9:   83 ec 18                 	sub esp, 0x18
0x80491dc:   c7 04 24 fe 99 04 08     	mov dword [ esp  ], 0x80499fe ;  "\nBOOM!!!\x00"
0x80491e3:   e8 20 f7 ff ff           	call 0x8048908  <puts>
0x80491e8:   c7 04 24 07 9a 04 08     	mov dword [ esp  ], 0x8049a07 ;  "The bomb has blown up.\x00"
0x80491ef:   e8 14 f7 ff ff           	call 0x8048908  <puts>
0x80491f4:   c7 04 24 00 00 00 00     	mov dword [ esp  ], 0x0
0x80491fb:   e8 ed fc ff ff           	call 0x8048eed  <send_msg>
0x8049200:   c7 04 24 d4 9b 04 08     	mov dword [ esp  ], 0x8049bd4 ;  "Your instructor has been notified.\x00"
0x8049207:   e8 fc f6 ff ff           	call 0x8048908  <puts>
0x804920c:   c7 04 24 08 00 00 00     	mov dword [ esp  ], 0x8
0x8049213:   e8 10 f7 ff ff           	call 0x8048928  <exit>
;  function: read_six_numbers at 0x8049218 -- 0x8049266
0x8049218:   55                       	push ebp
0x8049219:   89 e5                    	mov ebp, esp
0x804921b:   83 ec 28                 	sub esp, 0x28
0x804921e:   8b 45 0c                 	mov eax, dword [ ebp + 0xc ]
0x8049221:   8d 50 14                 	lea edx, dword [ eax + 0x14 ]
0x8049224:   89 54 24 1c              	mov dword [ esp  + 0x1c ], edx
0x8049228:   8d 50 10                 	lea edx, dword [ eax + 0x10 ]
0x804922b:   89 54 24 18              	mov dword [ esp  + 0x18 ], edx
0x804922f:   8d 50 0c                 	lea edx, dword [ eax + 0xc ]
0x8049232:   89 54 24 14              	mov dword [ esp  + 0x14 ], edx
0x8049236:   8d 50 08                 	lea edx, dword [ eax + 0x8 ]
0x8049239:   89 54 24 10              	mov dword [ esp  + 0x10 ], edx
0x804923d:   8d 50 04                 	lea edx, dword [ eax + 0x4 ]
0x8049240:   89 54 24 0c              	mov dword [ esp  + 0xc ], edx
0x8049244:   89 44 24 08              	mov dword [ esp  + 0x8 ], eax
0x8049248:   c7 44 24 04 1e 9a 04 08  	mov dword [ esp  + 0x4 ], 0x8049a1e ;  "%d %d %d %d %d %d\x00"
0x8049250:   8b 45 08                 	mov eax, dword [ ebp + 0x8 ]
0x8049253:   89 04 24                 	mov dword [ esp  ], eax
0x8049256:   e8 2d f5 ff ff           	call 0x8048788  <sscanf>
0x804925b:   83 f8 05                 	cmp eax, 0x5
0x804925e:   7f 05                    	jg  0x8049265  <read_six_numbers+0x4d>
0x8049260:   e8 71 ff ff ff           	call 0x80491d6  <explode_bomb>
0x8049265:   c9                       	leave
0x8049266:   c3                       	ret
;  function: blank_line at 0x8049267 -- 0x804929b
0x8049267:   55                       	push ebp
0x8049268:   89 e5                    	mov ebp, esp
0x804926a:   56                       	push esi
0x804926b:   53                       	push ebx
0x804926c:   8b 75 08                 	mov esi, dword [ ebp + 0x8 ]
0x804926f:   eb 1b                    	jmp 0x804928c  <blank_line+0x25>
0x8049271:   e8 a2 f5 ff ff           	call 0x8048818  <__ctype_b_loc>
0x8049276:   0f be db                 	movsx ebx, bl
0x8049279:   8b 00                    	mov eax, dword [ eax ]
0x804927b:   f6 44 58 01 20           	test byte [ eax + ebx * 0x1 + 0x1 ], 0x20
0x8049280:   75 07                    	jnz  0x8049289  <blank_line+0x22>
0x8049282:   b8 00 00 00 00           	mov eax, 0x0
0x8049287:   eb 0f                    	jmp 0x8049298  <blank_line+0x31>
0x8049289:   83 c6 01                 	add esi, 0x1
0x804928c:   0f b6 1e                 	movzx ebx, byte [ esi ]
0x804928f:   84 db                    	test bl, bl
0x8049291:   75 de                    	jnz  0x8049271  <blank_line+0xa>
0x8049293:   b8 01 00 00 00           	mov eax, 0x1
0x8049298:   5b                       	pop ebx
0x8049299:   5e                       	pop esi
0x804929a:   5d                       	pop ebp
0x804929b:   c3                       	ret
;  function: skip at 0x804929c -- 0x80492e5
0x804929c:   55                       	push ebp
0x804929d:   89 e5                    	mov ebp, esp
0x804929f:   53                       	push ebx
0x80492a0:   83 ec 14                 	sub esp, 0x14
0x80492a3:   a1 50 a8 04 08           	mov eax, dword [ 0x804a850 ]
0x80492a8:   89 44 24 08              	mov dword [ esp  + 0x8 ], eax
0x80492ac:   c7 44 24 04 50 00 00 00  	mov dword [ esp  + 0x4 ], 0x50
0x80492b4:   a1 4c a8 04 08           	mov eax, dword [ 0x804a84c ]
0x80492b9:   8d 04 80                 	lea eax, dword [ eax + eax * 0x2 ]
0x80492bc:   c1 e0 04                 	shl eax, 0x4
0x80492bf:   05 60 a8 04 08           	add eax, 0x804a860
0x80492c4:   89 04 24                 	mov dword [ esp  ], eax
0x80492c7:   e8 ec f4 ff ff           	call 0x80487b8  <fgets>
0x80492cc:   89 c3                    	mov ebx, eax
0x80492ce:   85 c0                    	test eax, eax
0x80492d0:   74 0c                    	jz  0x80492de  <skip+0x42>
0x80492d2:   89 04 24                 	mov dword [ esp  ], eax
0x80492d5:   e8 8d ff ff ff           	call 0x8049267  <blank_line>
0x80492da:   85 c0                    	test eax, eax
0x80492dc:   75 c5                    	jnz  0x80492a3  <skip+0x7>
0x80492de:   89 d8                    	mov eax, ebx
0x80492e0:   83 c4 14                 	add esp, 0x14
0x80492e3:   5b                       	pop ebx
0x80492e4:   5d                       	pop ebp
0x80492e5:   c3                       	ret
;  function: read_line at 0x80492e6 -- 0x80493c3
0x80492e6:   55                       	push ebp
0x80492e7:   89 e5                    	mov ebp, esp
0x80492e9:   57                       	push edi
0x80492ea:   53                       	push ebx
0x80492eb:   83 ec 10                 	sub esp, 0x10
0x80492ee:   e8 a9 ff ff ff           	call 0x804929c  <skip>
0x80492f3:   85 c0                    	test eax, eax
0x80492f5:   75 60                    	jnz  0x8049357  <read_line+0x71>
0x80492f7:   a1 50 a8 04 08           	mov eax, dword [ 0x804a850 ]
0x80492fc:   3b 05 20 a8 04 08        	cmp eax, dword [ 0x804a820 ]
0x8049302:   75 13                    	jnz  0x8049317  <read_line+0x31>
0x8049304:   c7 04 24 30 9a 04 08     	mov dword [ esp  ], 0x8049a30 ;  "Error: Premature EOF on stdin\x00"
0x804930b:   e8 f8 f5 ff ff           	call 0x8048908  <puts>
0x8049310:   e8 c1 fe ff ff           	call 0x80491d6  <explode_bomb>
0x8049315:   eb 40                    	jmp 0x8049357  <read_line+0x71>
0x8049317:   c7 04 24 4e 9a 04 08     	mov dword [ esp  ], 0x8049a4e ;  "GRADE_BOMB\x00"
0x804931e:   e8 75 f4 ff ff           	call 0x8048798  <getenv>
0x8049323:   85 c0                    	test eax, eax
0x8049325:   74 0c                    	jz  0x8049333  <read_line+0x4d>
0x8049327:   c7 04 24 00 00 00 00     	mov dword [ esp  ], 0x0
0x804932e:   e8 f5 f5 ff ff           	call 0x8048928  <exit>
0x8049333:   a1 20 a8 04 08           	mov eax, dword [ 0x804a820 ]
0x8049338:   a3 50 a8 04 08           	mov dword [ 0x804a850 ], eax
0x804933d:   e8 5a ff ff ff           	call 0x804929c  <skip>
0x8049342:   85 c0                    	test eax, eax
0x8049344:   75 11                    	jnz  0x8049357  <read_line+0x71>
0x8049346:   c7 04 24 30 9a 04 08     	mov dword [ esp  ], 0x8049a30 ;  "Error: Premature EOF on stdin\x00"
0x804934d:   e8 b6 f5 ff ff           	call 0x8048908  <puts>
0x8049352:   e8 7f fe ff ff           	call 0x80491d6  <explode_bomb>
0x8049357:   a1 4c a8 04 08           	mov eax, dword [ 0x804a84c ]
0x804935c:   8d 04 80                 	lea eax, dword [ eax + eax * 0x2 ]
0x804935f:   c1 e0 04                 	shl eax, 0x4
0x8049362:   8d b8 60 a8 04 08        	lea edi, dword [ eax + 0x804a860 ]
0x8049368:   b8 00 00 00 00           	mov eax, 0x0
0x804936d:   b9 ff ff ff ff           	mov ecx, 0xffffffffffffffff
0x8049372:   f2 ae                    	repne scasb
0x8049374:   f7 d1                    	not ecx
0x8049376:   8d 59 ff                 	lea ebx, dword [ ecx + 0xffffffffffffffff ]
0x8049379:   83 fb 4f                 	cmp ebx, 0x4f
0x804937c:   75 11                    	jnz  0x804938f  <read_line+0xa9>
0x804937e:   c7 04 24 59 9a 04 08     	mov dword [ esp  ], 0x8049a59 ;  "Error: Input line too long\x00"
0x8049385:   e8 7e f5 ff ff           	call 0x8048908  <puts>
0x804938a:   e8 47 fe ff ff           	call 0x80491d6  <explode_bomb>
0x804938f:   a1 4c a8 04 08           	mov eax, dword [ 0x804a84c ]
0x8049394:   8d 14 85 00 00 00 00     	lea edx, dword [ eax * 0x2 + 0x0 ]
0x804939b:   8d 0c 02                 	lea ecx, dword [ edx + eax * 0x0 ]
0x804939e:   c1 e1 04                 	shl ecx, 0x4
0x80493a1:   c6 84 0b 5f a8 04 08 00  	mov byte [ ebx + ecx * 0x0 + 0x804a85f ], 0x0
0x80493a9:   8d 48 01                 	lea ecx, dword [ eax + 0x1 ]
0x80493ac:   89 0d 4c a8 04 08        	mov dword [ 0x804a84c ], ecx
0x80493b2:   8d 04 02                 	lea eax, dword [ edx + eax * 0x0 ]
0x80493b5:   c1 e0 04                 	shl eax, 0x4
0x80493b8:   05 60 a8 04 08           	add eax, 0x804a860
0x80493bd:   83 c4 10                 	add esp, 0x10
0x80493c0:   5b                       	pop ebx
0x80493c1:   5f                       	pop edi
0x80493c2:   5d                       	pop ebp
0x80493c3:   c3                       	ret
;  function: invalid_phase at 0x80493c4 -- 0x80493e8
0x80493c4:   55                       	push ebp
0x80493c5:   89 e5                    	mov ebp, esp
0x80493c7:   83 ec 18                 	sub esp, 0x18
0x80493ca:   8b 45 08                 	mov eax, dword [ ebp + 0x8 ]
0x80493cd:   89 44 24 04              	mov dword [ esp  + 0x4 ], eax
0x80493d1:   c7 04 24 74 9a 04 08     	mov dword [ esp  ], 0x8049a74 ;  "Invalid phase%s\n\x00"
0x80493d8:   e8 9b f4 ff ff           	call 0x8048878  <printf>
0x80493dd:   c7 04 24 08 00 00 00     	mov dword [ esp  ], 0x8
0x80493e4:   e8 3f f5 ff ff           	call 0x8048928  <exit>
;  function: sig_handler at 0x80493e9 -- 0x8049443
0x80493e9:   55                       	push ebp
0x80493ea:   89 e5                    	mov ebp, esp
0x80493ec:   83 ec 18                 	sub esp, 0x18
0x80493ef:   c7 04 24 f8 9b 04 08     	mov dword [ esp  ], 0x8049bf8 ;  "So you think you can stop the bomb with ctrl-c, do you?\x00"
0x80493f6:   e8 0d f5 ff ff           	call 0x8048908  <puts>
0x80493fb:   c7 04 24 03 00 00 00     	mov dword [ esp  ], 0x3
0x8049402:   e8 f1 f4 ff ff           	call 0x80488f8  <sleep>
0x8049407:   c7 04 24 85 9a 04 08     	mov dword [ esp  ], 0x8049a85 ;  "Well...\x00"
0x804940e:   e8 65 f4 ff ff           	call 0x8048878  <printf>
0x8049413:   a1 40 a8 04 08           	mov eax, dword [ 0x804a840 ]
0x8049418:   89 04 24                 	mov dword [ esp  ], eax
0x804941b:   e8 d8 f3 ff ff           	call 0x80487f8  <fflush>
0x8049420:   c7 04 24 01 00 00 00     	mov dword [ esp  ], 0x1
0x8049427:   e8 cc f4 ff ff           	call 0x80488f8  <sleep>
0x804942c:   c7 04 24 8d 9a 04 08     	mov dword [ esp  ], 0x8049a8d ;  "OK. :-)\x00"
0x8049433:   e8 d0 f4 ff ff           	call 0x8048908  <puts>
0x8049438:   c7 04 24 10 00 00 00     	mov dword [ esp  ], 0x10
0x804943f:   e8 e4 f4 ff ff           	call 0x8048928  <exit>
;  function: open_clientfd at 0x8049444 -- 0x8049530
0x8049444:   55                       	push ebp
0x8049445:   89 e5                    	mov ebp, esp
0x8049447:   56                       	push esi
0x8049448:   53                       	push ebx
0x8049449:   83 ec 20                 	sub esp, 0x20
0x804944c:   c7 44 24 08 00 00 00 00  	mov dword [ esp  + 0x8 ], 0x0
0x8049454:   c7 44 24 04 01 00 00 00  	mov dword [ esp  + 0x4 ], 0x1
0x804945c:   c7 04 24 02 00 00 00     	mov dword [ esp  ], 0x2
0x8049463:   e8 a0 f3 ff ff           	call 0x8048808  <socket>
0x8049468:   89 c6                    	mov esi, eax
0x804946a:   85 c0                    	test eax, eax
0x804946c:   79 18                    	jns  0x8049486  <open_clientfd+0x42>
0x804946e:   c7 04 24 95 9a 04 08     	mov dword [ esp  ], 0x8049a95 ;  "Bad host (1).\x00"
0x8049475:   e8 8e f4 ff ff           	call 0x8048908  <puts>
0x804947a:   c7 04 24 08 00 00 00     	mov dword [ esp  ], 0x8
0x8049481:   e8 a2 f4 ff ff           	call 0x8048928  <exit>
0x8049486:   8b 45 08                 	mov eax, dword [ ebp + 0x8 ]
0x8049489:   89 04 24                 	mov dword [ esp  ], eax
0x804948c:   e8 87 f4 ff ff           	call 0x8048918  <gethostbyname>
0x8049491:   85 c0                    	test eax, eax
0x8049493:   75 18                    	jnz  0x80494ad  <open_clientfd+0x69>
0x8049495:   c7 04 24 a3 9a 04 08     	mov dword [ esp  ], 0x8049aa3 ;  "Bad host (2).\x00"
0x804949c:   e8 67 f4 ff ff           	call 0x8048908  <puts>
0x80494a1:   c7 04 24 08 00 00 00     	mov dword [ esp  ], 0x8
0x80494a8:   e8 7b f4 ff ff           	call 0x8048928  <exit>
0x80494ad:   8d 5d e8                 	lea ebx, dword [ ebp + 0xffffffffffffffe8 ]
0x80494b0:   c7 03 00 00 00 00        	mov dword [ ebx ], 0x0
0x80494b6:   c7 43 04 00 00 00 00     	mov dword [ ebx + 0x4 ], 0x0
0x80494bd:   c7 43 08 00 00 00 00     	mov dword [ ebx + 0x8 ], 0x0
0x80494c4:   c7 43 0c 00 00 00 00     	mov dword [ ebx + 0xc ], 0x0
0x80494cb:   66 c7 45 e8 02 00        	mov word [ ebp + 0xffffffffffffffe8 ], 0x2
0x80494d1:   8b 50 0c                 	mov edx, dword [ eax + 0xc ]
0x80494d4:   89 54 24 08              	mov dword [ esp  + 0x8 ], edx
0x80494d8:   8d 55 ec                 	lea edx, dword [ ebp + 0xffffffffffffffec ]
0x80494db:   89 54 24 04              	mov dword [ esp  + 0x4 ], edx
0x80494df:   8b 40 10                 	mov eax, dword [ eax + 0x10 ]
0x80494e2:   8b 00                    	mov eax, dword [ eax ]
0x80494e4:   89 04 24                 	mov dword [ esp  ], eax
0x80494e7:   e8 4c f3 ff ff           	call 0x8048838  <bcopy>
0x80494ec:   0f b7 45 0c              	movzx eax, word [ ebp + 0xc ]
0x80494f0:   66 c1 c8 08              	ror ax, 0x8
0x80494f4:   66 89 45 ea              	mov word [ ebp + 0xffffffffffffffea ], ax
0x80494f8:   c7 44 24 08 10 00 00 00  	mov dword [ esp  + 0x8 ], 0x10
0x8049500:   89 5c 24 04              	mov dword [ esp  + 0x4 ], ebx
0x8049504:   89 34 24                 	mov dword [ esp  ], esi
0x8049507:   e8 3c f2 ff ff           	call 0x8048748  <connect>
0x804950c:   85 c0                    	test eax, eax
0x804950e:   79 18                    	jns  0x8049528  <open_clientfd+0xe4>
0x8049510:   c7 04 24 b1 9a 04 08     	mov dword [ esp  ], 0x8049ab1 ;  "Bad host (3).\x00"
0x8049517:   e8 ec f3 ff ff           	call 0x8048908  <puts>
0x804951c:   c7 04 24 08 00 00 00     	mov dword [ esp  ], 0x8
0x8049523:   e8 00 f4 ff ff           	call 0x8048928  <exit>
0x8049528:   89 f0                    	mov eax, esi
0x804952a:   83 c4 20                 	add esp, 0x20
0x804952d:   5b                       	pop ebx
0x804952e:   5e                       	pop esi
0x804952f:   5d                       	pop ebp
0x8049530:   c3                       	ret
;  function: initialize_bomb at 0x8049531 -- 0x80495ef
0x8049531:   55                       	push ebp
0x8049532:   89 e5                    	mov ebp, esp
0x8049534:   57                       	push edi
0x8049535:   56                       	push esi
0x8049536:   53                       	push ebx
0x8049537:   83 ec 5c                 	sub esp, 0x5c
0x804953a:   c7 44 24 04 e9 93 04 08  	mov dword [ esp  + 0x4 ], 0x80493e9 ;  Address of function: sig_handler
0x8049542:   c7 04 24 02 00 00 00     	mov dword [ esp  ], 0x2
0x8049549:   e8 0a f2 ff ff           	call 0x8048758  <signal>
0x804954e:   c7 44 24 04 40 00 00 00  	mov dword [ esp  + 0x4 ], 0x40
0x8049556:   8d 45 a8                 	lea eax, dword [ ebp + 0xffffffffffffffa8 ]
0x8049559:   89 04 24                 	mov dword [ esp  ], eax
0x804955c:   e8 77 f3 ff ff           	call 0x80488d8  <gethostname>
0x8049561:   85 c0                    	test eax, eax
0x8049563:   75 18                    	jnz  0x804957d  <initialize_bomb+0x4c>
0x8049565:   a1 e0 a6 04 08           	mov eax, dword [ 0x804a6e0 ]
0x804956a:   bb 00 00 00 00           	mov ebx, 0x0
0x804956f:   8d 75 a8                 	lea esi, dword [ ebp + 0xffffffffffffffa8 ]
0x8049572:   bf e0 a6 04 08           	mov edi, 0x804a6e0
0x8049577:   85 c0                    	test eax, eax
0x8049579:   75 1a                    	jnz  0x8049595  <initialize_bomb+0x64>
0x804957b:   eb 58                    	jmp 0x80495d5  <initialize_bomb+0xa4>
0x804957d:   c7 04 24 bf 9a 04 08     	mov dword [ esp  ], 0x8049abf ;  "Bad host (4)\x00"
0x8049584:   e8 7f f3 ff ff           	call 0x8048908  <puts>
0x8049589:   c7 04 24 08 00 00 00     	mov dword [ esp  ], 0x8
0x8049590:   e8 93 f3 ff ff           	call 0x8048928  <exit>
0x8049595:   89 74 24 04              	mov dword [ esp  + 0x4 ], esi
0x8049599:   89 04 24                 	mov dword [ esp  ], eax
0x804959c:   e8 e7 f2 ff ff           	call 0x8048888  <strcasecmp>
0x80495a1:   85 c0                    	test eax, eax
0x80495a3:   74 0c                    	jz  0x80495b1  <initialize_bomb+0x80>
0x80495a5:   83 c3 01                 	add ebx, 0x1
0x80495a8:   8b 04 9f                 	mov eax, dword [ edi + ebx * 0x2 ]
0x80495ab:   85 c0                    	test eax, eax
0x80495ad:   75 e6                    	jnz  0x8049595  <initialize_bomb+0x64>
0x80495af:   eb 24                    	jmp 0x80495d5  <initialize_bomb+0xa4>
0x80495b1:   c7 44 24 04 50 00 00 00  	mov dword [ esp  + 0x4 ], 0x50
0x80495b9:   c7 04 24 cc 9a 04 08     	mov dword [ esp  ], 0x8049acc
0x80495c0:   e8 7f fe ff ff           	call 0x8049444  <open_clientfd>
0x80495c5:   89 04 24                 	mov dword [ esp  ], eax
0x80495c8:   e8 cb f2 ff ff           	call 0x8048898  <close>
0x80495cd:   83 c4 5c                 	add esp, 0x5c
0x80495d0:   5b                       	pop ebx
0x80495d1:   5e                       	pop esi
0x80495d2:   5f                       	pop edi
0x80495d3:   5d                       	pop ebp
0x80495d4:   c3                       	ret
0x80495d5:   c7 04 24 d8 9a 04 08     	mov dword [ esp  ], 0x8049ad8 ;  "Bad host (5).\x00"
0x80495dc:   e8 27 f3 ff ff           	call 0x8048908  <puts>
0x80495e1:   c7 04 24 08 00 00 00     	mov dword [ esp  ], 0x8
0x80495e8:   e8 3b f3 ff ff           	call 0x8048928  <exit>
0x80495ed:   90                       	nop
0x80495ee:   90                       	nop
0x80495ef:   90                       	nop
;  function: __libc_csu_fini at 0x80495f0 -- 0x80495ff
0x80495f0:   55                       	push ebp
0x80495f1:   89 e5                    	mov ebp, esp
0x80495f3:   5d                       	pop ebp
0x80495f4:   c3                       	ret
0x80495f5:   66                       	Operand-size override prefix
0x80495f6:   66                       	Operand-size override prefix
0x80495f7:   2e                       	CS segment override prefix
0x80495f8:   0f 1f 84 00 00 00 00 00  	nop dword [ eax + eax * 0x0 + 0x0 ]
;  function: __libc_csu_init at 0x8049600 -- 0x8049659
0x8049600:   55                       	push ebp
0x8049601:   89 e5                    	mov ebp, esp
0x8049603:   57                       	push edi
0x8049604:   56                       	push esi
0x8049605:   53                       	push ebx
0x8049606:   e8 4f 00 00 00           	call 0x804965a  <__i686.get_pc_thunk.bx>
0x804960b:   81 c3 d5 0a 00 00        	add ebx, 0xad5
0x8049611:   83 ec 1c                 	sub esp, 0x1c
0x8049614:   e8 df f0 ff ff           	call 0x80486f8  <_init>
0x8049619:   8d bb 20 ff ff ff        	lea edi, dword [ ebx + 0xffffffffffffff20 ]
0x804961f:   8d 83 20 ff ff ff        	lea eax, dword [ ebx + 0xffffffffffffff20 ]
0x8049625:   29 c7                    	sub edi, eax
0x8049627:   c1 ff 02                 	sar edi, 0x2
0x804962a:   85 ff                    	test edi, edi
0x804962c:   74 24                    	jz  0x8049652  <__libc_csu_init+0x52>
0x804962e:   31 f6                    	xor esi, esi
0x8049630:   8b 45 10                 	mov eax, dword [ ebp + 0x10 ]
0x8049633:   89 44 24 08              	mov dword [ esp  + 0x8 ], eax
0x8049637:   8b 45 0c                 	mov eax, dword [ ebp + 0xc ]
0x804963a:   89 44 24 04              	mov dword [ esp  + 0x4 ], eax
0x804963e:   8b 45 08                 	mov eax, dword [ ebp + 0x8 ]
0x8049641:   89 04 24                 	mov dword [ esp  ], eax
0x8049644:   ff 94 b3 20 ff ff ff     	call dword [ ebx + esi * 0x2 + 0xffffffffffffff20 ]
0x804964b:   83 c6 01                 	add esi, 0x1
0x804964e:   39 fe                    	cmp esi, edi
0x8049650:   72 de                    	jc  0x8049630  <__libc_csu_init+0x30>
0x8049652:   83 c4 1c                 	add esp, 0x1c
0x8049655:   5b                       	pop ebx
0x8049656:   5e                       	pop esi
0x8049657:   5f                       	pop edi
0x8049658:   5d                       	pop ebp
0x8049659:   c3                       	ret
;  function: __i686.get_pc_thunk.bx at 0x804965a -- 0x804965f
0x804965a:   8b 1c 24                 	mov ebx, dword [ esp  ]
0x804965d:   c3                       	ret
0x804965e:   90                       	nop
0x804965f:   90                       	nop
;  function: __do_global_ctors_aux at 0x8049660 -- 0x804968b
0x8049660:   55                       	push ebp
0x8049661:   89 e5                    	mov ebp, esp
0x8049663:   53                       	push ebx
0x8049664:   8d 64 24 fc              	lea esp, dword [ esp  + 0xfffffffffffffffc ]
0x8049668:   a1 00 a0 04 08           	mov eax, dword [ 0x804a000 ]
0x804966d:   83 f8 ff                 	cmp eax, 0xffffffffffffffff
0x8049670:   74 12                    	jz  0x8049684  <__do_global_ctors_aux+0x24>
0x8049672:   bb 00 a0 04 08           	mov ebx, 0x804a000
0x8049677:   90                       	nop
0x8049678:   8d 5b fc                 	lea ebx, dword [ ebx + 0xfffffffffffffffc ]
0x804967b:   ff d0                    	call eax
0x804967d:   8b 03                    	mov eax, dword [ ebx ]
0x804967f:   83 f8 ff                 	cmp eax, 0xffffffffffffffff
0x8049682:   75 f4                    	jnz  0x8049678  <__do_global_ctors_aux+0x18>
0x8049684:   8d 64 24 04              	lea esp, dword [ esp  + 0x4 ]
0x8049688:   5b                       	pop ebx
0x8049689:   5d                       	pop ebp
0x804968a:   c3                       	ret
0x804968b:   90                       	nop
;  section: .fini
;  function: _fini at 0x804968c -- 0x8049697
0x804968c:   55                       	push ebp
0x804968d:   89 e5                    	mov ebp, esp
0x804968f:   53                       	push ebx
0x8049690:   83 ec 04                 	sub esp, 0x4
0x8049693:   e8 00 00 00 00           	call 0x8049698  <function_8049698>
;  function: function_8049698 at 0x8049698 -- 0x80496a7
0x8049698:   5b                       	pop ebx
0x8049699:   81 c3 48 0a 00 00        	add ebx, 0xa48
0x804969f:   e8 cc f2 ff ff           	call 0x8048970  <__do_global_dtors_aux>
0x80496a4:   59                       	pop ecx
0x80496a5:   5b                       	pop ebx
0x80496a6:   c9                       	leave
0x80496a7:   c3                       	ret

;; 
;; Data Segment
;; 

;  section: .interp
0x8048134:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x8048144:   2e 32 00                                           |.2.             |
;  section: .gnu.hash
0x804818c:   03 00 00 00 21 00 00 00  01 00 00 00 05 00 00 00   |....!...........|
0x804819c:   80 2b 00 20 21 00 00 00  22 00 00 00 00 00 00 00   |.+. !...".......|
0x80481ac:   29 1d 8c 1c ac 4b e3 c0  67 55 61 10               |)....K..gUa.    |
;  section: .dynsym
0x80481b8:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481c8:   4b 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |K...............|
0x80481d8:   69 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |i...............|
0x80481e8:   71 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |q...............|
0x80481f8:   01 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |............ ...|
0x8048208:   83 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x8048218:   59 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |Y...............|
0x8048228:   be 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x8048238:   d3 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x8048248:   91 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x8048258:   13 01 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x8048268:   97 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x8048278:   8a 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x8048288:   38 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |8...............|
0x8048298:   29 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |)...............|
0x80482a8:   c5 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80482b8:   ac 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80482c8:   ff 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80482d8:   e8 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80482e8:   53 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |S...............|
0x80482f8:   3f 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |?...............|
0x8048308:   06 01 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x8048318:   b3 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x8048328:   ad 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x8048338:   f8 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x8048348:   05 01 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x8048358:   30 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |0...............|
0x8048368:   ec 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x8048378:   a6 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x8048388:   0d 01 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x8048398:   78 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |x...............|
0x80483a8:   da 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80483b8:   46 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |F...............|
0x80483c8:   9f 00 00 00 40 a8 04 08  04 00 00 00 11 00 19 00   |....@...........|
0x80483d8:   1a 00 00 00 c4 96 04 08  04 00 00 00 11 00 0f 00   |................|
0x80483e8:   7d 00 00 00 20 a8 04 08  04 00 00 00 11 00 19 00   |}... ...........|
;  section: .dynstr
0x80483f8:   00 5f 5f 67 6d 6f 6e 5f  73 74 61 72 74 5f 5f 00   |.__gmon_start__.|
0x8048408:   6c 69 62 63 2e 73 6f 2e  36 00 5f 49 4f 5f 73 74   |libc.so.6._IO_st|
0x8048418:   64 69 6e 5f 75 73 65 64  00 73 6f 63 6b 65 74 00   |din_used.socket.|
0x8048428:   63 75 73 65 72 69 64 00  66 66 6c 75 73 68 00 73   |cuserid.fflush.s|
0x8048438:   74 72 63 70 79 00 65 78  69 74 00 73 70 72 69 6e   |trcpy.exit.sprin|
0x8048448:   74 66 00 66 6f 70 65 6e  00 5f 5f 69 73 6f 63 39   |tf.fopen.__isoc9|
0x8048458:   39 5f 73 73 63 61 6e 66  00 63 6f 6e 6e 65 63 74   |9_sscanf.connect|
0x8048468:   00 73 69 67 6e 61 6c 00  70 75 74 73 00 73 74 64   |.signal.puts.std|
0x8048478:   69 6e 00 72 65 77 69 6e  64 00 73 74 72 74 6f 6c   |in.rewind.strtol|
0x8048488:   00 66 67 65 74 73 00 74  6d 70 66 69 6c 65 00 73   |.fgets.tmpfile.s|
0x8048498:   74 64 6f 75 74 00 66 70  75 74 63 00 66 63 6c 6f   |tdout.fputc.fclo|
0x80484a8:   73 65 00 73 74 72 63 61  73 65 63 6d 70 00 67 65   |se.strcasecmp.ge|
0x80484b8:   74 65 6e 76 00 5f 5f 63  74 79 70 65 5f 62 5f 6c   |tenv.__ctype_b_l|
0x80484c8:   6f 63 00 73 79 73 74 65  6d 00 67 65 74 68 6f 73   |oc.system.gethos|
0x80484d8:   74 62 79 6e 61 6d 65 00  64 75 70 00 67 65 74 68   |tbyname.dup.geth|
0x80484e8:   6f 73 74 6e 61 6d 65 00  66 77 72 69 74 65 00 62   |ostname.fwrite.b|
0x80484f8:   63 6f 70 79 00 66 70 72  69 6e 74 66 00 73 6c 65   |copy.fprintf.sle|
0x8048508:   65 70 00 5f 5f 6c 69 62  63 5f 73 74 61 72 74 5f   |ep.__libc_start_|
0x8048518:   6d 61 69 6e 00 47 4c 49  42 43 5f 32 2e 33 00 47   |main.GLIBC_2.3.G|
0x8048528:   4c 49 42 43 5f 32 2e 31  00 47 4c 49 42 43 5f 32   |LIBC_2.1.GLIBC_2|
0x8048538:   2e 37 00 47 4c 49 42 43  5f 32 2e 30 00            |.7.GLIBC_2.0.   |
;  section: .gnu.version
0x8048546:   00 00 02 00 02 00 02 00  00 00 02 00 03 00 02 00   |................|
0x8048556:   02 00 02 00 02 00 04 00  02 00 02 00 02 00 05 00   |................|
0x8048566:   04 00 02 00 02 00 04 00  02 00 02 00 02 00 02 00   |................|
0x8048576:   02 00 02 00 02 00 02 00  02 00 02 00 02 00 02 00   |................|
0x8048586:   02 00 02 00 01 00 02 00                            |........        |
;  section: .gnu.version_r
0x8048590:   01 00 04 00 10 00 00 00  10 00 00 00 00 00 00 00   |................|
0x80485a0:   13 69 69 0d 00 00 05 00  25 01 00 00 10 00 00 00   |.ii.....%.......|
0x80485b0:   11 69 69 0d 00 00 04 00  2f 01 00 00 10 00 00 00   |.ii...../.......|
0x80485c0:   17 69 69 0d 00 00 03 00  39 01 00 00 10 00 00 00   |.ii.....9.......|
0x80485d0:   10 69 69 0d 00 00 02 00  43 01 00 00 00 00 00 00   |.ii.....C.......|
;  section: .rel.dyn
0x80485e0:   dc a0 04 08 06 04 00 00  20 a8 04 08 05 23 00 00   |........ ....#..|
0x80485f0:   40 a8 04 08 05 21 00 00                            |@....!..        |
;  section: .rel.plt
0x80485f8:   ec a0 04 08 07 01 00 00  f0 a0 04 08 07 02 00 00   |................|
0x8048608:   f4 a0 04 08 07 03 00 00  f8 a0 04 08 07 04 00 00   |................|
0x8048618:   fc a0 04 08 07 05 00 00  00 a1 04 08 07 06 00 00   |................|
0x8048628:   04 a1 04 08 07 07 00 00  08 a1 04 08 07 08 00 00   |................|
0x8048638:   0c a1 04 08 07 09 00 00  10 a1 04 08 07 0a 00 00   |................|
0x8048648:   14 a1 04 08 07 0b 00 00  18 a1 04 08 07 0c 00 00   |................|
0x8048658:   1c a1 04 08 07 0d 00 00  20 a1 04 08 07 0e 00 00   |........ .......|
0x8048668:   24 a1 04 08 07 0f 00 00  28 a1 04 08 07 10 00 00   |$.......(.......|
0x8048678:   2c a1 04 08 07 11 00 00  30 a1 04 08 07 12 00 00   |,.......0.......|
0x8048688:   34 a1 04 08 07 13 00 00  38 a1 04 08 07 14 00 00   |4.......8.......|
0x8048698:   3c a1 04 08 07 15 00 00  40 a1 04 08 07 16 00 00   |<.......@.......|
0x80486a8:   44 a1 04 08 07 17 00 00  48 a1 04 08 07 18 00 00   |D.......H.......|
0x80486b8:   4c a1 04 08 07 19 00 00  50 a1 04 08 07 1a 00 00   |L.......P.......|
0x80486c8:   54 a1 04 08 07 1b 00 00  58 a1 04 08 07 1c 00 00   |T.......X.......|
0x80486d8:   5c a1 04 08 07 1d 00 00  60 a1 04 08 07 1e 00 00   |\.......`.......|
0x80486e8:   64 a1 04 08 07 1f 00 00  68 a1 04 08 07 20 00 00   |d.......h.... ..|
;  section: .rodata
0x80496c0:   03 00 00 00 01 00 02 00  00 00 00 00               |............    |
0x80496cc:   25 73 3a 20 45 72 72 6f  72 3a 20 43 6f 75 6c 64   |%s: Error: Could|  "%s: Error: Couldn't open %s\n\x00"
0x80496dc:   6e 27 74 20 6f 70 65 6e  20 25 73 0a 00            |n't open %s..   |
0x80496e9:   55 73 61 67 65 3a 20 25  73 20 5b 3c 69 6e 70 75   |Usage: %s [<inpu|  "Usage: %s [<input_file>]\n\x00"
0x80496f9:   74 5f 66 69 6c 65 3e 5d  0a 00                     |t_file>]..      |
0x8049703:   54 68 61 74 27 73 20 6e  75 6d 62 65 72 20 32 2e   |That's number 2.|  "That's number 2.  Keep going!\x00"
0x8049713:   20 20 4b 65 65 70 20 67  6f 69 6e 67 21 00         |  Keep going!.  |
0x8049721:   48 61 6c 66 77 61 79 20  74 68 65 72 65 21 00      |Halfway there!. |  "Halfway there!\x00"
0x8049730:   47 6f 6f 64 20 77 6f 72  6b 21 20 20 4f 6e 20 74   |Good work!  On t|  "Good work!  On to the next...\x00"
0x8049740:   6f 20 74 68 65 20 6e 65  78 74 2e 2e 2e 00         |o the next....  |
0x804974e:   00 00                                              |..              |
0x8049750:   57 65 6c 63 6f 6d 65 20  74 6f 20 6d 79 20 66 69   |Welcome to my fi|  "Welcome to my fiendish little bomb. You have 6 phases with\x00"
0x8049760:   65 6e 64 69 73 68 20 6c  69 74 74 6c 65 20 62 6f   |endish little bo|
0x8049770:   6d 62 2e 20 59 6f 75 20  68 61 76 65 20 36 20 70   |mb. You have 6 p|
0x8049780:   68 61 73 65 73 20 77 69  74 68 00                  |hases with.     |
0x804978b:   00                                                 |.               |
0x804978c:   77 68 69 63 68 20 74 6f  20 62 6c 6f 77 20 79 6f   |which to blow yo|  "which to blow yourself up. Have a nice day!\x00"
0x804979c:   75 72 73 65 6c 66 20 75  70 2e 20 48 61 76 65 20   |urself up. Have |
0x80497ac:   61 20 6e 69 63 65 20 64  61 79 21 00               |a nice day!.    |
0x80497b8:   50 68 61 73 65 20 31 20  64 65 66 75 73 65 64 2e   |Phase 1 defused.|  "Phase 1 defused. How about the next one?\x00"
0x80497c8:   20 48 6f 77 20 61 62 6f  75 74 20 74 68 65 20 6e   | How about the n|
0x80497d8:   65 78 74 20 6f 6e 65 3f  00                        |ext one?.       |
0x80497e1:   00 00 00                                           |...             |
0x80497e4:   53 6f 20 79 6f 75 20 67  6f 74 20 74 68 61 74 20   |So you got that |  "So you got that one.  Try this one.\x00"
0x80497f4:   6f 6e 65 2e 20 20 54 72  79 20 74 68 69 73 20 6f   |one.  Try this o|
0x8049804:   6e 65 2e 00                                        |ne..            |
0x8049808:   57 6f 77 21 20 59 6f 75  27 76 65 20 64 65 66 75   |Wow! You've defu|  "Wow! You've defused the secret stage!\x00"
0x8049818:   73 65 64 20 74 68 65 20  73 65 63 72 65 74 20 73   |sed the secret s|
0x8049828:   74 61 67 65 21 00                                  |tage!.          |
0x804982e:   00 00                                              |..              |
0x8049830:   46 6f 72 20 4e 41 53 41  2c 20 73 70 61 63 65 20   |For NASA, space |
0x8049840:   69 73 20 73 74 69 6c 6c  20 61 20 68 69 67 68 20   |is still a high |
0x8049850:   70 72 69 6f 72 69 74 79  2e                        |priority.       |
0x8049859:   00 00 00 00 00 00 00                               |.......         |
0x8049860:   b4 8d 04 08                                        |....            |
0x8049864:   ad 8d 04 08                                        |....            |
0x8049868:   bb 8d 04 08                                        |....            |
0x804986c:   c2 8d 04 08                                        |....            |
0x8049870:   c9 8d 04 08                                        |....            |
0x8049874:   d0 8d 04 08                                        |....            |
0x8049878:   d7 8d 04 08                                        |....            |
0x804987c:   de 8d 04 08                                        |....            |
0x8049880:   02 00 00 00                                        |....            |
0x8049884:   0a 00 00 00 06 00 00 00  01 00 00 00 0c 00 00 00   |................|
0x8049894:   10 00 00 00 09 00 00 00  03 00 00 00 04 00 00 00   |................|
0x80498a4:   07 00 00 00 0e 00 00 00  05 00 00 00 0b 00 00 00   |................|
0x80498b4:   08 00 00 00 0f 00 00 00  0d 00 00 00               |............    |
0x80498c0:   45 52 52 4f 52 3a 20 64  75 70 28 30 29 20 65 72   |ERROR: dup(0) er|  "ERROR: dup(0) error\x00"
0x80498d0:   72 6f 72 00                                        |ror.            |
0x80498d4:   45 52 52 4f 52 3a 20 63  6c 6f 73 65 20 65 72 72   |ERROR: close err|  "ERROR: close error\x00"
0x80498e4:   6f 72 00                                           |or.             |
0x80498e7:   45 52 52 4f 52 3a 20 74  6d 70 66 69 6c 65 20 65   |ERROR: tmpfile e|  "ERROR: tmpfile error\x00"
0x80498f7:   72 72 6f 72 00                                     |rror.           |
0x80498fc:   53 75 62 6a 65 63 74 3a  20 42 6f 6d 62 20 6e 6f   |Subject: Bomb no|  "Subject: Bomb notification\n\x00"
0x804990c:   74 69 66 69 63 61 74 69  6f 6e 0a 00               |tification..    |
0x8049918:   65 78 70 6c 6f 64 65 64  00                        |exploded.       |  "exploded\x00"
0x8049921:   64 65 66 75 73 65 64 00                            |defused.        |  "defused\x00"
0x8049929:   62 6f 6d 62 2d 68 65 61  64 65 72 3a 25 73 3a 25   |bomb-header:%s:%|  "bomb-header:%s:%d:%s:%s:%d\n\x00"
0x8049939:   64 3a 25 73 3a 25 73 3a  25 64 0a 00               |d:%s:%s:%d..    |
0x8049945:   62 6f 6d 62 2d 73 74 72  69 6e 67 3a 25 73 3a 25   |bomb-string:%s:%|  "bomb-string:%s:%d:%s:%d:%s\n\x00"
0x8049955:   64 3a 25 73 3a 25 64 3a  25 73 0a 00               |d:%s:%d:%s..    |
0x8049961:   62 6f 6d 62 00                                     |bomb.           |  "bomb\x00"
0x8049966:   2f 75 73 72 2f 73 62 69  6e 2f 73 65 6e 64 6d 61   |/usr/sbin/sendma|  "/usr/sbin/sendmail -bm\x00"
0x8049976:   69 6c 20 2d 62 6d 00                               |il -bm.         |
0x804997d:   25 73 20 25 73 40 25 73  00                        |%s %s@%s.       |  "%s %s@%s\x00"
0x8049986:   45 52 52 4f 52 3a 20 6e  6f 74 69 66 69 63 61 74   |ERROR: notificat|  "ERROR: notification error\x00"
0x8049996:   69 6f 6e 20 65 72 72 6f  72 00                     |ion error.      |
0x80499a0:   45 52 52 4f 52 3a 20 66  63 6c 6f 73 65 28 74 6d   |ERROR: fclose(tm|  "ERROR: fclose(tmp) error\x00"
0x80499b0:   70 29 20 65 72 72 6f 72  00                        |p) error.       |
0x80499b9:   45 52 52 4f 52 3a 20 64  75 70 28 74 6d 70 73 74   |ERROR: dup(tmpst|  "ERROR: dup(tmpstdin) error\x00"
0x80499c9:   64 69 6e 29 20 65 72 72  6f 72 00                  |din) error.     |
0x80499d4:   45 52 52 4f 52 3a 20 63  6c 6f 73 65 28 74 6d 70   |ERROR: close(tmp|  "ERROR: close(tmpstdin)\x00"
0x80499e4:   73 74 64 69 6e 29 00                               |stdin).         |
0x80499eb:   25 64 20 25 73 00                                  |%d %s.          |  "%d %s\x00"
0x80499f1:   61 75 73 74 69 6e 70 6f  77 65 72 73               |austinpowers    |
0x80499fd:   00                                                 |.               |
0x80499fe:   0a 42 4f 4f 4d 21 21 21  00                        |.BOOM!!!.       |  "\nBOOM!!!\x00"
0x8049a07:   54 68 65 20 62 6f 6d 62  20 68 61 73 20 62 6c 6f   |The bomb has blo|  "The bomb has blown up.\x00"
0x8049a17:   77 6e 20 75 70 2e 00                               |wn up..         |
0x8049a1e:   25 64 20 25 64 20 25 64  20 25 64 20 25 64 20 25   |%d %d %d %d %d %|  "%d %d %d %d %d %d\x00"
0x8049a2e:   64 00                                              |d.              |
0x8049a30:   45 72 72 6f 72 3a 20 50  72 65 6d 61 74 75 72 65   |Error: Premature|  "Error: Premature EOF on stdin\x00"
0x8049a40:   20 45 4f 46 20 6f 6e 20  73 74 64 69 6e 00         | EOF on stdin.  |
0x8049a4e:   47 52 41 44 45 5f 42 4f  4d 42 00                  |GRADE_BOMB.     |  "GRADE_BOMB\x00"
0x8049a59:   45 72 72 6f 72 3a 20 49  6e 70 75 74 20 6c 69 6e   |Error: Input lin|  "Error: Input line too long\x00"
0x8049a69:   65 20 74 6f 6f 20 6c 6f  6e 67 00                  |e too long.     |
0x8049a74:   49 6e 76 61 6c 69 64 20  70 68 61 73 65 25 73 0a   |Invalid phase%s.|  "Invalid phase%s\n\x00"
0x8049a84:   00                                                 |.               |
0x8049a85:   57 65 6c 6c 2e 2e 2e 00                            |Well....        |  "Well...\x00"
0x8049a8d:   4f 4b 2e 20 3a 2d 29 00                            |OK. :-).        |  "OK. :-)\x00"
0x8049a95:   42 61 64 20 68 6f 73 74  20 28 31 29 2e 00         |Bad host (1)..  |  "Bad host (1).\x00"
0x8049aa3:   42 61 64 20 68 6f 73 74  20 28 32 29 2e 00         |Bad host (2)..  |  "Bad host (2).\x00"
0x8049ab1:   42 61 64 20 68 6f 73 74  20 28 33 29 2e 00         |Bad host (3)..  |  "Bad host (3).\x00"
0x8049abf:   42 61 64 20 68 6f 73 74  20 28 34 29 00            |Bad host (4).   |  "Bad host (4)\x00"
0x8049acc:   77 77 77 2e 75 6d 6c 2e  65 64 75                  |www.uml.edu     |
0x8049ad7:   00                                                 |.               |
0x8049ad8:   42 61 64 20 68 6f 73 74  20 28 35 29 2e 00         |Bad host (5)..  |  "Bad host (5).\x00"
0x8049ae6:   6d 65 72 63 75 72 79 2e  63 73 2e 75 6d 6c 2e 65   |mercury.cs.uml.e|
0x8049af6:   64 75                                              |du              |
0x8049af8:   00                                                 |.               |
0x8049af9:   6d 65 72 63 75 72 79                               |mercury         |
0x8049b00:   00 00 00 00                                        |....            |
0x8049b04:   43 75 72 73 65 73 2c 20  79 6f 75 27 76 65 20 66   |Curses, you've f|  "Curses, you've found the secret phase!\x00"
0x8049b14:   6f 75 6e 64 20 74 68 65  20 73 65 63 72 65 74 20   |ound the secret |
0x8049b24:   70 68 61 73 65 21 00                               |phase!.         |
0x8049b2b:   00                                                 |.               |
0x8049b2c:   42 75 74 20 66 69 6e 64  69 6e 67 20 69 74 20 61   |But finding it a|  "But finding it and solving it are quite different...\x00"
0x8049b3c:   6e 64 20 73 6f 6c 76 69  6e 67 20 69 74 20 61 72   |nd solving it ar|
0x8049b4c:   65 20 71 75 69 74 65 20  64 69 66 66 65 72 65 6e   |e quite differen|
0x8049b5c:   74 2e 2e 2e 00                                     |t....           |
0x8049b61:   00 00 00                                           |...             |
0x8049b64:   43 6f 6e 67 72 61 74 75  6c 61 74 69 6f 6e 73 21   |Congratulations!|  "Congratulations! You've defused the bomb!\x00"
0x8049b74:   20 59 6f 75 27 76 65 20  64 65 66 75 73 65 64 20   | You've defused |
0x8049b84:   74 68 65 20 62 6f 6d 62  21 00                     |the bomb!.      |
0x8049b8e:   00 00                                              |..              |
0x8049b90:   59 6f 75 72 20 69 6e 73  74 72 75 63 74 6f 72 20   |Your instructor |  "Your instructor has been notified and will verify your solution.\x00"
0x8049ba0:   68 61 73 20 62 65 65 6e  20 6e 6f 74 69 66 69 65   |has been notifie|
0x8049bb0:   64 20 61 6e 64 20 77 69  6c 6c 20 76 65 72 69 66   |d and will verif|
0x8049bc0:   79 20 79 6f 75 72 20 73  6f 6c 75 74 69 6f 6e 2e   |y your solution.|
0x8049bd0:   00                                                 |.               |
0x8049bd1:   00 00 00                                           |...             |
0x8049bd4:   59 6f 75 72 20 69 6e 73  74 72 75 63 74 6f 72 20   |Your instructor |  "Your instructor has been notified.\x00"
0x8049be4:   68 61 73 20 62 65 65 6e  20 6e 6f 74 69 66 69 65   |has been notifie|
0x8049bf4:   64 2e 00                                           |d..             |
0x8049bf7:   00                                                 |.               |
0x8049bf8:   53 6f 20 79 6f 75 20 74  68 69 6e 6b 20 79 6f 75   |So you think you|  "So you think you can stop the bomb with ctrl-c, do you?\x00"
0x8049c08:   20 63 61 6e 20 73 74 6f  70 20 74 68 65 20 62 6f   | can stop the bo|
0x8049c18:   6d 62 20 77 69 74 68 20  63 74 72 6c 2d 63 2c 20   |mb with ctrl-c, |
0x8049c28:   64 6f 20 79 6f 75 3f 00                            |do you?.        |
;  section: .eh_frame_hdr
0x8049c30:   01 1b 03 3b 20 00 00 00  03 00 00 00 c0 f9 ff ff   |...; ...........|
0x8049c40:   3c 00 00 00 d0 f9 ff ff  5c 00 00 00 2a fa ff ff   |<.......\...*...|
0x8049c50:   88 00 00 00                                        |....            |
;  section: .eh_frame
0x8049c54:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x8049c64:   1b 0c 04 04 88 01 00 00  1c 00 00 00 1c 00 00 00   |................|
0x8049c74:   7c f9 ff ff 05 00 00 00  00 41 0e 08 85 02 42 0d   ||........A....B.|
0x8049c84:   05 41 c5 0c 04 04 00 00  28 00 00 00 3c 00 00 00   |.A......(...<...|
0x8049c94:   6c f9 ff ff 5a 00 00 00  00 41 0e 08 85 02 42 0d   |l...Z....A....B.|
0x8049ca4:   05 43 83 05 86 04 87 03  02 50 c3 41 c6 41 c7 41   |.C.......P.A.A.A|
0x8049cb4:   c5 0c 04 04 10 00 00 00  68 00 00 00 9a f9 ff ff   |........h.......|
0x8049cc4:   04 00 00 00 00 00 00 00  00 00 00 00               |............    |
;  section: .ctors
0x804a000:   ff ff ff ff                                        |....            |
0x804a004:   00 00 00 00                                        |....            |
;  section: .dtors
0x804a008:   ff ff ff ff 00 00 00 00                            |........        |
;  section: .jcr
0x804a010:   00 00 00 00                                        |....            |
;  section: .dynamic
0x804a014:   01 00 00 00 10 00 00 00  0c 00 00 00 f8 86 04 08   |................|
0x804a024:   0d 00 00 00 8c 96 04 08  f5 fe ff 6f 8c 81 04 08   |...........o....|
0x804a034:   05 00 00 00 f8 83 04 08  06 00 00 00 b8 81 04 08   |................|
0x804a044:   0a 00 00 00 4d 01 00 00  0b 00 00 00 10 00 00 00   |....M...........|
0x804a054:   15 00 00 00 00 00 00 00  03 00 00 00 e0 a0 04 08   |................|
0x804a064:   02 00 00 00 00 01 00 00  14 00 00 00 11 00 00 00   |................|
0x804a074:   17 00 00 00 f8 85 04 08  11 00 00 00 e0 85 04 08   |................|
0x804a084:   12 00 00 00 18 00 00 00  13 00 00 00 08 00 00 00   |................|
0x804a094:   fe ff ff 6f 90 85 04 08  ff ff ff 6f 01 00 00 00   |...o.......o....|
0x804a0a4:   f0 ff ff 6f 46 85 04 08  00 00 00 00 00 00 00 00   |...oF...........|
0x804a0b4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804a0c4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804a0d4:   00 00 00 00 00 00 00 00                            |........        |
;  section: .got
0x804a0dc:   00 00 00 00                                        |....            |
;  section: .got.plt
0x804a0e0:   14 a0 04 08 00 00 00 00  00 00 00 00 3e 87 04 08   |............>...|
0x804a0f0:   4e 87 04 08 5e 87 04 08  6e 87 04 08 7e 87 04 08   |N...^...n...~...|
0x804a100:   8e 87 04 08 9e 87 04 08  ae 87 04 08 be 87 04 08   |................|
0x804a110:   ce 87 04 08 de 87 04 08  ee 87 04 08 fe 87 04 08   |................|
0x804a120:   0e 88 04 08 1e 88 04 08  2e 88 04 08 3e 88 04 08   |............>...|
0x804a130:   4e 88 04 08 5e 88 04 08  6e 88 04 08 7e 88 04 08   |N...^...n...~...|
0x804a140:   8e 88 04 08 9e 88 04 08  ae 88 04 08 be 88 04 08   |................|
0x804a150:   ce 88 04 08 de 88 04 08  ee 88 04 08 fe 88 04 08   |................|
0x804a160:   0e 89 04 08 1e 89 04 08  2e 89 04 08               |............    |
;  section: .data
0x804a180:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804a190:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804a1a0:   13 00 00 00                                        |....            |
0x804a1a4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804a1b4:   00 00 00 00 00 00 00 00  00 00 00 00               |............    |
0x804a1c0:   46 61 6c 6c 31 35 62 6f  6d 62                     |Fall15bomb      |
0x804a1ca:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804a1da:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804a1ea:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804a1fa:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804a20a:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804a21a:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804a22a:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804a23a:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804a24a:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804a25a:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804a26a:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804a27a:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804a28a:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804a29a:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804a2aa:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804a2ba:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804a2ca:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804a2da:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804a2ea:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804a2fa:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804a30a:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804a31a:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804a32a:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804a33a:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804a34a:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804a35a:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804a36a:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804a37a:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804a38a:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804a39a:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804a3aa:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804a3ba:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804a3ca:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804a3da:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804a3ea:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804a3fa:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804a40a:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804a41a:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804a42a:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804a43a:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804a44a:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804a45a:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804a46a:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804a47a:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804a48a:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804a49a:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804a4aa:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804a4ba:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804a4ca:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804a4da:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804a4ea:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804a4fa:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804a50a:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804a51a:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804a52a:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804a53a:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804a54a:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804a55a:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804a56a:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804a57a:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804a58a:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804a59a:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804a5aa:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804a5ba:   00 00 00 00 00 00 02 01  00 00 09 00 00 00 00 00   |................|
0x804a5ca:   00 00 7f 03 00 00 08 00  00 00 c0 a5 04 08 1b 02   |................|
0x804a5da:   00 00 07 00 00 00 cc a5  04 08 4e 00 00 00 06 00   |..........N.....|
0x804a5ea:   00 00 d8 a5 04 08 db 03  00 00 05 00 00 00 e4 a5   |................|
0x804a5fa:   04 08 70 00 00 00 04 00  00 00 f0 a5 04 08 25 03   |..p...........%.|
0x804a60a:   00 00 03 00 00 00 fc a5  04 08 e1 03 00 00 02 00   |................|
0x804a61a:   00 00 08 a6 04 08                                  |......          |
0x804a620:   6b 02 00 00                                        |k...            |
0x804a624:   01 00 00 00 14 a6 04 08  e9 03 00 00 00 00 00 00   |................|
0x804a634:   00 00 00 00 2f 00 00 00  00 00 00 00 00 00 00 00   |..../...........|
0x804a644:   14 00 00 00 00 00 00 00  00 00 00 00 07 00 00 00   |................|
0x804a654:   00 00 00 00 00 00 00 00  23 00 00 00 00 00 00 00   |........#.......|
0x804a664:   00 00 00 00 63 00 00 00  00 00 00 00 00 00 00 00   |....c...........|
0x804a674:   01 00 00 00 00 00 00 00  00 00 00 00 28 00 00 00   |............(...|
0x804a684:   00 00 00 00 00 00 00 00  6b 00 00 00 68 a6 04 08   |........k...h...|
0x804a694:   2c a6 04 08 06 00 00 00  74 a6 04 08 50 a6 04 08   |,.......t...P...|
0x804a6a4:   2d 00 00 00 80 a6 04 08  38 a6 04 08 16 00 00 00   |-.......8.......|
0x804a6b4:   44 a6 04 08 5c a6 04 08  32 00 00 00 a4 a6 04 08   |D...\...2.......|
0x804a6c4:   8c a6 04 08 08 00 00 00  98 a6 04 08 b0 a6 04 08   |................|
0x804a6d4:   24 00 00 00                                        |$...            |
0x804a6d8:   c8 a6 04 08 bc a6 04 08                            |........        |
0x804a6e0:   e6 9a 04 08                                        |....            |
0x804a6e4:   f9 9a 04 08                                        |....            |
0x804a6e8:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804a6f8:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804a708:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804a718:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804a728:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804a738:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804a748:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804a758:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804a768:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804a778:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804a788:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804a798:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804a7a8:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804a7b8:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804a7c8:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804a7d8:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804a7e8:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804a7f8:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804a808:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804a818:   00 00 00 00 00 00 00 00                            |........        |
